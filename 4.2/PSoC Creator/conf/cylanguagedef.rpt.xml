<?xml version="1.0" encoding="us-ascii"?>
<SyntaxLanguage Key="Rpt" LanguageDefinitionVersion="4.0" 
                SyntaxLanguageTypeName="CyDesigner.Common.Editors.CyRptDynamicOutliningLanguage, cyeditors"  Secure="True">

  <!-- String Properties -->
  <Properties>
    <Property Key="Creator" Value="Cypress Semiconductor" />
    <Property Key="Copyright" Value="Copyright (c) 2006 Cypress Semiconductor.  All rights reserved." />
  </Properties>

  <!-- Highlighting Styles -->
  <Styles>
    <!-- Optional Styles to Override Built-In Styles -->
    <Style Key="CollapsibleTextStyle" Name="Collapsible Text" ForeColor="Gray" BackColor="Default"/>
    <!-- Styles -->
    <Style Key="ExtendedIdentifierStyle" ForeColor="Teal" BackColor="Default" Bold="False"/>
	  <Style Key="TagDelimiterStyle" ForeColor="Blue" Bold="False"/>
    <Style Key="TagAttributeStyle" ForeColor="Maroon" />
    <Style Key="TagAttributeValueStyle" ForeColor="Green" />
    <Style Key="SingleLocationStyle" ForeColor="Brown" Bold="False"/>
  </Styles>

  <!-- Macros -->
  <Macros>
    <Macro Key="TagNameMacro" Value="[a-zA-Z_0-9\-:]" />
  </Macros>

  <!-- States -->
  <States>
    <!-- Text -->
		<State Key="DefaultState">
			<!-- Patterns Groups -->
			<PatternGroups>
				<!-- Identifier -->
				<RegexPatternGroup TokenKey="IdentifierToken" PatternValue="{AlphaMacro}({WordMacro})*" />
				<!-- Whitespace -->
				<RegexPatternGroup TokenKey="WhitespaceToken" PatternValue="{WhitespaceMacro}+" IsWhitespace="True" />
				<!-- Extended Identifier-->
				<RegexPatternGroup TokenKey="ExtendedIdentifierToken" Style ="ExtendedIdentifierStyle" PatternValue="\\[^\\\n]*:[^\\:\n]+\\" />
        <!-- Single Location @[]-->
        <RegexPatternGroup TokenKey="SingleLocationToken" Style ="SingleLocationStyle" PatternValue="@(\[[^\[\]]+\])+" />
			</PatternGroups>
			<!-- Child States -->
			<ChildStates>
				<ChildState Key="EndTagState" />
				<ChildState Key="StartTagState" />
			</ChildStates>
		</State>
		
	<!-- Start Tags -->
		<State Key="StartTagState" TokenKey="StartTagDefaultToken" Style="TagAttributeStyle">
			<!-- Scopes -->
			<Scopes>
				<Scope>
					<ExplicitPatternGroup Type="StartScope" TokenKey="StartTagStartToken" Style="TagDelimiterStyle" PatternValue="&lt;CYPRESSTAG" />
					<RegexPatternGroup Type="EndScope" TokenKey="StartTagEndToken" Style="TagDelimiterStyle" PatternValue="/? &gt;" />	
				</Scope>
			</Scopes>
      <ChildStates>
        <ChildState Key="StartTagAttributeState" />
      </ChildStates>
		</State>
		<!-- End Tags -->
		<State Key="EndTagState" TokenKey="EndTagDefaultToken" Style="TagAttributeStyle">
			<!-- Scopes -->
			<Scopes>
				<Scope>
					<ExplicitPatternGroup Type="StartScope" TokenKey="EndTagStartToken" Style="TagDelimiterStyle" PatternValue="&lt;/CYPRESSTAG" />
					<ExplicitPatternGroup Type="EndScope" TokenKey="EndTagEndToken" Style="TagDelimiterStyle" PatternValue="&gt;" />	
				</Scope>
			</Scopes>
			<!-- Patterns Groups -->
			<PatternGroups>
				<RegexPatternGroup TokenKey="EndTagDefaultToken" PatternValue="[^&gt;]+" />
			</PatternGroups>
		</State>

    <!-- Start Tag Attributes -->
    <State Key="StartTagAttributeState" TokenKey="StartTagDefaultToken" Style="TagAttributeStyle">
      <!-- Scopes -->
      <Scopes>
        <Scope>
          <RegexPatternGroup Type="StartScope" TokenKey="StartTagNameToken" Style="TagAttributeStyle" PatternValue="{LineTerminatorWhitespaceMacro}* {TagNameMacro}+ {LineTerminatorWhitespaceMacro}*" />
        </Scope>
      </Scopes>
      <!-- Patterns Groups -->
      <PatternGroups>
        <!-- Brackets -->
        <RegexPatternGroup TokenKey="StartTagAttributeToken" Style="TagAttributeStyle" LookAhead="{NonWordMacro}|\z" PatternValue="{WordMacro}+" />
      </PatternGroups>
      <!-- Child States -->
      <ChildStates>
        <ChildState Key="StartTagAttributeStringValueState" />
        <ChildState Key="StartTagAttributeValueState" />
      </ChildStates>
    </State>

    <!-- Start Tag Attribute Values -->
    <State Key="StartTagAttributeValueState" TokenKey="StartTagAttributeValueDefaultToken" Style="TagAttributeValueStyle">
      <!-- Scopes -->
      <Scopes>
        <Scope>
          <RegexPatternGroup Type="StartScope" TokenKey="StartTagAttributeValueStartToken" Style="TagAttributeValueStyle" PatternValue="= {LineTerminatorWhitespaceMacro}*" />
          <RegexPatternGroup Type="EndScope" TokenKey="StartTagAttributeValueEndToken" Style="TagAttributeValueStyle" PatternValue="{LineTerminatorWhitespaceMacro}+" />
        </Scope>
      </Scopes>
      <!-- Patterns Groups -->
      <PatternGroups>
        <RegexPatternGroup TokenKey="StartTagAttributeStringValueDefaultToken" PatternValue="{NonLineTerminatorWhitespaceMacro}+" />
      </PatternGroups>
    </State>

    <!-- Start Tag Attribute String Values -->
    <State Key="StartTagAttributeStringValueState" TokenKey="StartTagAttributeStringValueDefaultToken" Style="TagAttributeValueStyle">
      <!-- Scopes -->
      <Scopes>
        <Scope>
          <RegexPatternGroup Type="StartScope" TokenKey="StartTagAttributeStringValueStartToken" Style="TagAttributeValueStyle" PatternValue="= {LineTerminatorWhitespaceMacro}* \&quot;" />
          <RegexPatternGroup Type="EndScope" TokenKey="StartTagAttributeStringValueEndToken" Style="TagAttributeValueStyle" PatternValue="\&quot;" />
        </Scope>
      </Scopes>
      <!-- Patterns Groups -->
      <PatternGroups>
        <RegexPatternGroup TokenKey="StartTagAttributeStringValueDefaultToken" PatternValue="[^&quot;]+" />
      </PatternGroups>
    </State>
   </States>
  
</SyntaxLanguage>
