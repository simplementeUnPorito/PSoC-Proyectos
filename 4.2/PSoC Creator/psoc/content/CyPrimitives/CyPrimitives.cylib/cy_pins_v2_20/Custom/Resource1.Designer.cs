//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cypress.Comps.PinsAndPorts.cy_pins_v2_20 {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource1 {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource1() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Cypress.Comps.PinsAndPorts.cy_pins_v2_20.Resource1", typeof(Resource1).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [All pins].
        /// </summary>
        internal static string AllPins {
            get {
                return ResourceManager.GetString("AllPins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] AnalogEMF {
            get {
                object obj = ResourceManager.GetObject("AnalogEMF", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Ann1DownLeftEMF {
            get {
                object obj = ResourceManager.GetObject("Ann1DownLeftEMF", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Ann1DownRightEMF {
            get {
                object obj = ResourceManager.GetObject("Ann1DownRightEMF", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Ann2DownLeftEMF {
            get {
                object obj = ResourceManager.GetObject("Ann2DownLeftEMF", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] AnnLeftEMF {
            get {
                object obj = ResourceManager.GetObject("AnnLeftEMF", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] AnnRightEMF {
            get {
                object obj = ResourceManager.GetObject("AnnRightEMF", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] BidirEMF {
            get {
                object obj = ResourceManager.GetObject("BidirEMF", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter &apos;{0}&apos; passed to the function &apos;{1}&apos; contains the following error: &apos;{2}&apos;..
        /// </summary>
        internal static string CustFunctError {
            get {
                return ResourceManager.GetString("CustFunctError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] DefaultDriveModesEMF {
            get {
                object obj = ResourceManager.GetObject("DefaultDriveModesEMF", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap DeleteImage {
            get {
                object obj = ResourceManager.GetObject("DeleteImage", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] DigInAnalogEMF {
            get {
                object obj = ResourceManager.GetObject("DigInAnalogEMF", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] DigInEMF {
            get {
                object obj = ResourceManager.GetObject("DigInEMF", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] DigInNCAnalogEMF {
            get {
                object obj = ResourceManager.GetObject("DigInNCAnalogEMF", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] DigInNCEMF {
            get {
                object obj = ResourceManager.GetObject("DigInNCEMF", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] DigOutEMF {
            get {
                object obj = ResourceManager.GetObject("DigOutEMF", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] DigOutNCEMF {
            get {
                object obj = ResourceManager.GetObject("DigOutNCEMF", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] DigOutNCOEEMF {
            get {
                object obj = ResourceManager.GetObject("DigOutNCOEEMF", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] DigOutOEEMF {
            get {
                object obj = ResourceManager.GetObject("DigOutOEEMF", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alias names cannot be repeated. &apos;{0}&apos; has been used {1} times..
        /// </summary>
        internal static string Err_AliasRepeated {
            get {
                return ResourceManager.GetString("Err_AliasRepeated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin {0}: Invalid number of characters entered; all entries must contain {1} characters. &apos;{2}&apos; is {3} characters long..
        /// </summary>
        internal static string Err_BitVectorValueIncorrectLength {
            get {
                return ResourceManager.GetString("Err_BitVectorValueIncorrectLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin {0}: &apos;{1}&apos; is not a valid option..
        /// </summary>
        internal static string Err_BitVectorValueInvalidOption {
            get {
                return ResourceManager.GetString("Err_BitVectorValueInvalidOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin {0}: Invalid character found. Valid values must only contain 0&apos;s and 1&apos;s. &apos;{1}&apos; is not a valid character..
        /// </summary>
        internal static string Err_BitVectorValueOnlyOnesAndZeros {
            get {
                return ResourceManager.GetString("Err_BitVectorValueOnlyOnesAndZeros", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin {0}: Multiple analog pins cannot be Contiguous. Remove the Contiguous restriction on the &apos;Mapping&apos; tab..
        /// </summary>
        internal static string Err_CannotBeContiguousAndAnalogMsg1 {
            get {
                return ResourceManager.GetString("Err_CannotBeContiguousAndAnalogMsg1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin {0}: Contiguous pins require a digital pin type. Remove the use of analog from the &apos;Pins/Type&apos; parameter if you wish to use Contiguous pins..
        /// </summary>
        internal static string Err_CannotBeContiguousAndAnalogMsg2 {
            get {
                return ResourceManager.GetString("Err_CannotBeContiguousAndAnalogMsg2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin {0}: Cannot enable the input buffer with a drive mode of Analog High-Z..
        /// </summary>
        internal static string Err_CannotEnableIBufAndAnalogHiZ {
            get {
                return ResourceManager.GetString("Err_CannotEnableIBufAndAnalogHiZ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin {0}: Cannot uncheck all types..
        /// </summary>
        internal static string Err_CannotUncheckAllTypes {
            get {
                return ResourceManager.GetString("Err_CannotUncheckAllTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin {0}: SIO features have been used by this pin therefore analog cannot be used. (SIO features include: HotSwap set to true, ThresholdLevels set to anything but LVTTL or CMOS, OutputDriveLevel set to Vref, and/or DriveCurrents set to a 25mA sink).
        /// </summary>
        internal static string Err_CannotUseAnalogAndSIO {
            get {
                return ResourceManager.GetString("Err_CannotUseAnalogAndSIO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When interrupts are used, spanning is not allowed (i.e. all pins must be placed in the same physical port).
        /// </summary>
        internal static string Err_CannotUseInterruptsAndSpan {
            get {
                return ResourceManager.GetString("Err_CannotUseInterruptsAndSpan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin {0}: SIO features have been used by this pin therefore LVTTL cannot be used for its threshold level. (SIO features include: HotSwap set to true, ThresholdLevels set to anything but LVTTL or CMOS, OutputDriveLevel set to Vref, and/or DriveCurrents set to a 25mA sink).
        /// </summary>
        internal static string Err_CannotUseLVTTLAndSIO {
            get {
                return ResourceManager.GetString("Err_CannotUseLVTTLAndSIO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port Adapter features have been used by this pin but the selected device does not have a Port Adapter. (Port Adapter features include: all settings in the Clocking tab not set to HFCLK or None, InputMode set to SingleSync, or OutputMode set to Clock).
        /// </summary>
        internal static string Err_CannotUsePAonDevice {
            get {
                return ResourceManager.GetString("Err_CannotUsePAonDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin {0}: This option requires a pin with the {1} feature but the selected device does not support {1}..
        /// </summary>
        internal static string Err_CannotUsePinTypeonDevice {
            get {
                return ResourceManager.GetString("Err_CannotUsePinTypeonDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The component must be homogeneous to be displayed as a bus. This means that all pins in the component have the same pin type, input HW connections, output HW connections, SIO grouping, and either all use or don&apos;t use the SIO Vref.
        /// </summary>
        internal static string Err_DisplayAsBusRequiresHomogenous {
            get {
                return ResourceManager.GetString("Err_DisplayAsBusRequiresHomogenous", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin {0}: Use of drive modes which are not High Impedance with a hardware-routed input requires a port adapter, but the selected device does not have one..
        /// </summary>
        internal static string Err_DriveModeRequiresPA {
            get {
                return ResourceManager.GetString("Err_DriveModeRequiresPA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin &apos;{0}&apos; is selected to be analog. The selected device does not support analog pins.
        /// </summary>
        internal static string Err_Gen4_Analog {
            get {
                return ResourceManager.GetString("Err_Gen4_Analog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The hysteresis settings of all pins must match if the component is set as Contiguous..
        /// </summary>
        internal static string Err_HysteresisMismatchContiguous {
            get {
                return ResourceManager.GetString("Err_HysteresisMismatchContiguous", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin {0}: Input Sync mode of &apos;{1}&apos; is not available for this device..
        /// </summary>
        internal static string Err_InputSyncInvalid {
            get {
                return ResourceManager.GetString("Err_InputSyncInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin {0}: &apos;{1}&apos; contains more precision than is supported. Only one decimal place of precision is supported..
        /// </summary>
        internal static string Err_InvalidIOVoltagePercision {
            get {
                return ResourceManager.GetString("Err_InvalidIOVoltagePercision", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin {0}: &apos;{1}&apos; is not in a valid number format..
        /// </summary>
        internal static string Err_InvalidNumFormat {
            get {
                return ResourceManager.GetString("Err_InvalidNumFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input buffer selected as disabled on pin &apos;{0}&apos;. Input buffer is automatically enabled..
        /// </summary>
        internal static string Err_M0S8_InputBufferDisabled {
            get {
                return ResourceManager.GetString("Err_M0S8_InputBufferDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected Power-On-Reset is not compatible with the selected device. .
        /// </summary>
        internal static string Err_M0S8_Invalid_POR {
            get {
                return ResourceManager.GetString("Err_M0S8_Invalid_POR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin {0}: The multiplier output must be less than VDDIO - 400 mV. Please adjust the multiplier or increase the minimum supply voltage..
        /// </summary>
        internal static string Err_M0S8_MultiplierOutputTooHigh {
            get {
                return ResourceManager.GetString("Err_M0S8_MultiplierOutputTooHigh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin {0}: When a pin is both an input and an output, the multiplier values for input threshold and drive level must match..
        /// </summary>
        internal static string Err_M0S8_MultipliersMustMatch {
            get {
                return ResourceManager.GetString("Err_M0S8_MultipliersMustMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin {0}: When SIOs are paired and use a vref multiplier, the multiplier values must match..
        /// </summary>
        internal static string Err_M0S8_SioPairMultipliersMustMatch {
            get {
                return ResourceManager.GetString("Err_M0S8_SioPairMultipliersMustMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin {0}: When both SIOs in a pair use vref, the vref sources must match..
        /// </summary>
        internal static string Err_M0S8_SioPairRefSelMustMatch {
            get {
                return ResourceManager.GetString("Err_M0S8_SioPairRefSelMustMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin {0}: When both the input threshold and output drive level use vref, the vref sources must match..
        /// </summary>
        internal static string Err_M0S8_SioRefSelMustMatch {
            get {
                return ResourceManager.GetString("Err_M0S8_SioRefSelMustMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Slew Rates of all pins must match if the component is set as Contiguous..
        /// </summary>
        internal static string Err_M0S8_SlewRateContiguousMismatch {
            get {
                return ResourceManager.GetString("Err_M0S8_SlewRateContiguousMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin {0}: When an I2C slew rate is selected, the minimum supply voltage must be specified.
        /// </summary>
        internal static string Err_M0S8_SlewRateI2CNeedsMinimumSupply {
            get {
                return ResourceManager.GetString("Err_M0S8_SlewRateI2CNeedsMinimumSupply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin {0}: When an I2C slew rate is selected, the drive mode must be set to open drain, drives low..
        /// </summary>
        internal static string Err_M0S8_SlewRateI2CNeedsOpenDrain {
            get {
                return ResourceManager.GetString("Err_M0S8_SlewRateI2CNeedsOpenDrain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin {0}: When the drive level is set to internal vref, the minimum supply voltage must be specified..
        /// </summary>
        internal static string Err_M0S8_VrefDriveLevelRequiresMinimumSupply {
            get {
                return ResourceManager.GetString("Err_M0S8_VrefDriveLevelRequiresMinimumSupply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin {0}: When the input threshold is set to internal vref, the minimum supply voltage must be specified..
        /// </summary>
        internal static string Err_M0S8_VrefThresholdRequiresMinimumSupply {
            get {
                return ResourceManager.GetString("Err_M0S8_VrefThresholdRequiresMinimumSupply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin {0}: &apos;{1}&apos; is not between the legal range of 1.7 volts to 5.5 volts..
        /// </summary>
        internal static string Err_NotInIOVoltageRange {
            get {
                return ResourceManager.GetString("Err_NotInIOVoltageRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin {0} : The selected device does not support the requested feature..
        /// </summary>
        internal static string Err_NotSupportedOnOldGPIO {
            get {
                return ResourceManager.GetString("Err_NotSupportedOnOldGPIO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin {0}: &apos;{1}&apos; is not a valid alias. An alias must be a valid C/C++ identifier name. {2}.
        /// </summary>
        internal static string Err_NotValidCIdentifier {
            get {
                return ResourceManager.GetString("Err_NotValidCIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin {0}: This selection is restricted to {1} pins, but the selection for {2} is restricted to {3} pins..
        /// </summary>
        internal static string Err_OvtAndSioFeaturesUsed {
            get {
                return ResourceManager.GetString("Err_OvtAndSioFeaturesUsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected device does not support output drive level of Vref if drive mode is set to Resistive Pull Up/Down..
        /// </summary>
        internal static string Err_P35_ResistivePullAndVrefOut {
            get {
                return ResourceManager.GetString("Err_P35_ResistivePullAndVrefOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin {0} : The selected device does not support vref multiplier values other than one..
        /// </summary>
        internal static string Err_P35VrefMultipliersNotSupported {
            get {
                return ResourceManager.GetString("Err_P35VrefMultipliersNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NumPins Validation Failed. The width must be between 1 and 64..
        /// </summary>
        internal static string Err_PinCountOutOfRange {
            get {
                return ResourceManager.GetString("Err_PinCountOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of pins must be less than or equal to 8 if spanning is not allowed..
        /// </summary>
        internal static string Err_PinCountRequiresSpanning {
            get {
                return ResourceManager.GetString("Err_PinCountRequiresSpanning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin {0}: When SIOs are paired their hysteresis settings must match..
        /// </summary>
        internal static string Err_SIOPairHysteresisDoesntMatch {
            get {
                return ResourceManager.GetString("Err_SIOPairHysteresisDoesntMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin {0}: When SIOs are paired their Input Thresholds must match..
        /// </summary>
        internal static string Err_SIOPairInputsDontMatch {
            get {
                return ResourceManager.GetString("Err_SIOPairInputsDontMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin {0}: When SIOs are paired their Output Drive Levels must match..
        /// </summary>
        internal static string Err_SIOPairOutputsDontMatch {
            get {
                return ResourceManager.GetString("Err_SIOPairOutputsDontMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Input Thresholds are not compatible if the component is set as Contiguous..
        /// </summary>
        internal static string Err_ThresholdContiguousMismatch {
            get {
                return ResourceManager.GetString("Err_ThresholdContiguousMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of pins must be less than or equal to 8 when interrupts are used in order for them all to fit within a single physical port..
        /// </summary>
        internal static string Err_TooManyPinsForInterrupt {
            get {
                return ResourceManager.GetString("Err_TooManyPinsForInterrupt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot be contiguous and have more than 2 single SIO pins in a row. Making them contiguous means they will have to share an SIO pair on the device. Either group the single SIO pins or change the LayoutMode to remove the contiguous restriction..
        /// </summary>
        internal static string Err_TooManySingleSIOInARow {
            get {
                return ResourceManager.GetString("Err_TooManySingleSIOInARow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This configuration will not be placeable. Cannot have two single SIO pins next to an SIO pair if the component is set to be contiguous. Either remove the contiguous constraint or group the single SIO pins..
        /// </summary>
        internal static string Err_TooManySingleSIONextToSIOPair {
            get {
                return ResourceManager.GetString("Err_TooManySingleSIONextToSIOPair", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ErrorImage {
            get {
                object obj = ResourceManager.GetObject("ErrorImage", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] HiImpedanceAnalogEMF {
            get {
                object obj = ResourceManager.GetObject("HiImpedanceAnalogEMF", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] HiImpedanceDigitalEMF {
            get {
                object obj = ResourceManager.GetObject("HiImpedanceDigitalEMF", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Indeterminate&gt;.
        /// </summary>
        internal static string Indeterminate {
            get {
                return ResourceManager.GetString("Indeterminate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Double-Sync.
        /// </summary>
        internal static string InputSyncMode_DoubleSync {
            get {
                return ResourceManager.GetString("InputSyncMode_DoubleSync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Single-Sync.
        /// </summary>
        internal static string InputSyncMode_SingleSync {
            get {
                return ResourceManager.GetString("InputSyncMode_SingleSync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interconnect.
        /// </summary>
        internal static string InterconnectTabDisplayName {
            get {
                return ResourceManager.GetString("InterconnectTabDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interrupt configured on input tab.
        /// </summary>
        internal static string InterruptTermDescription {
            get {
                return ResourceManager.GetString("InterruptTermDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap MoveDownImage {
            get {
                object obj = ResourceManager.GetObject("MoveDownImage", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap MoveUpImage {
            get {
                object obj = ResourceManager.GetObject("MoveUpImage", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] OpenDrainDrivesHighEMF {
            get {
                object obj = ResourceManager.GetObject("OpenDrainDrivesHighEMF", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] OpenDrainDrivesLowEMF {
            get {
                object obj = ResourceManager.GetObject("OpenDrainDrivesLowEMF", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap PairSIOsImage {
            get {
                object obj = ResourceManager.GetObject("PairSIOsImage", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect number of arguments to call function &apos;{0}&apos; (two arguments are expected: `=CalculateSIOGroupCount($sio_info, $width)`)..
        /// </summary>
        internal static string ParamCntErr_CalculateSIOGroupCount {
            get {
                return ResourceManager.GetString("ParamCntErr_CalculateSIOGroupCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect number of arguments to call function &apos;{0}&apos; (expected `=CreateCSVFromBitVector(bitVectorParamName, bitVectorString, $NumPins)`)..
        /// </summary>
        internal static string ParamCntErr_CreateCSVFromBitVector {
            get {
                return ResourceManager.GetString("ParamCntErr_CreateCSVFromBitVector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect number of arguments to call function &apos;{0}&apos; (expected `=CreateCSVFromInputOnlyBitVector(bitVectorParamName, bitVectorString, $PinTypes, $NumPins)`)..
        /// </summary>
        internal static string ParamCntErr_CreateCSVFromInputOnlyBitVector {
            get {
                return ResourceManager.GetString("ParamCntErr_CreateCSVFromInputOnlyBitVector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect number of arguments to call function &apos;{0}&apos; (expected `=CreateCSVFromOutputOnlyBitVector(bitVectorParamName, bitVectorString, $PinTypes, $NumPins)`)..
        /// </summary>
        internal static string ParamCntErr_CreateCSVFromOutputOnlyBitVector {
            get {
                return ResourceManager.GetString("ParamCntErr_CreateCSVFromOutputOnlyBitVector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect number of arguments to call function &apos;{0}&apos; (expected `=CreateDriveModesCSV($DriveModes, $PinTypes, $NumPins)`)..
        /// </summary>
        internal static string ParamCntErr_CreateDriveModesCSV {
            get {
                return ResourceManager.GetString("ParamCntErr_CreateDriveModesCSV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect number of arguments to call function &apos;{0}&apos;(four arguments are expected: `=CreateHysteresisCSV($ThresholdLevels, $sio_info, $PinTypes, $NumPins)`)..
        /// </summary>
        internal static string ParamCntErr_CreateHysteresisCSV {
            get {
                return ResourceManager.GetString("ParamCntErr_CreateHysteresisCSV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect number of arguments to call function &apos;{0}&apos; (expected `=CreateInitialDriveStatesCSV($InitialDriveStates, $DriveModes, $PinTypes, $NumPins)`)..
        /// </summary>
        internal static string ParamCntErr_CreateInitialDriveStatesCSV {
            get {
                return ResourceManager.GetString("ParamCntErr_CreateInitialDriveStatesCSV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect number of arguments to call function &apos;{0}&apos; (three arguments are expected: `=CreateInputBufferBitVector($ThresholdLevels, $sio_info, $PinTypes, $NumPins)`)..
        /// </summary>
        internal static string ParamCntErr_CreateInputBufferBitVector {
            get {
                return ResourceManager.GetString("ParamCntErr_CreateInputBufferBitVector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect number of arguments to call function &apos;{0}&apos; (expected `=CreateInputBufferesEnabledCSV($InputBuffersEnabled, $PinTypes, $NumPins)`)..
        /// </summary>
        internal static string ParamCntErr_CreateInputBufferesEnabledCSV {
            get {
                return ResourceManager.GetString("ParamCntErr_CreateInputBufferesEnabledCSV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect number of arguments to call function &apos;{0}&apos; (expected `=CreateIOVoltagesCSV($IOVoltages, $NumPins)`)..
        /// </summary>
        internal static string ParamCntErr_CreateIOVoltagesCSV {
            get {
                return ResourceManager.GetString("ParamCntErr_CreateIOVoltagesCSV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect number of arguments to call function &apos;{0}&apos; (four arguments are expected: `=CreateOutputBufferBitVector($OutputDriveLevels, $sio_info, $PinTypes, $width)`)..
        /// </summary>
        internal static string ParamCntErr_CreateOutputBufferBitVector {
            get {
                return ResourceManager.GetString("ParamCntErr_CreateOutputBufferBitVector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect number of arguments to call function &apos;{0}&apos; (three arguments are expected: `=CreateOutputConnVisibleBitVector($PinTypes, $DisplayOutputHWConnections, $NumPins)`)..
        /// </summary>
        internal static string ParamCntErr_CreateOutputConnVisibleBitVector {
            get {
                return ResourceManager.GetString("ParamCntErr_CreateOutputConnVisibleBitVector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect number of arguments to call function &apos;{0}&apos; (two arguments are expected: `=CreateOutputEnableConnVisibleBitVector($PinTypes, $NumPins)`)..
        /// </summary>
        internal static string ParamCntErr_CreateOutputEnableConnVisibleBitVector {
            get {
                return ResourceManager.GetString("ParamCntErr_CreateOutputEnableConnVisibleBitVector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect number of arguments to call function &apos;{0}&apos; (expected `=CreatePinAliasesCSV($PinAliases, $NumPins)`)..
        /// </summary>
        internal static string ParamCntErr_CreatePinAliasesCSV {
            get {
                return ResourceManager.GetString("ParamCntErr_CreatePinAliasesCSV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect number of arguments to call function &apos;{0}&apos; (two arguments is expected: `=CreatePinModeString($PinTypes, $NumPins)`)..
        /// </summary>
        internal static string ParamCntErr_CreatePinModeString {
            get {
                return ResourceManager.GetString("ParamCntErr_CreatePinModeString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect number of arguments to call function &apos;{0}&apos; (seven arguments are expected: `=CreateSIOInfoCSV($SIOGroups, $HotSwaps, $ThresholdLevels, $OutputDriveLevels, $DriveCurrents, $PinTypes, $width)`)..
        /// </summary>
        internal static string ParamCntErr_CreateSIOInfoCVS {
            get {
                return ResourceManager.GetString("ParamCntErr_CreateSIOInfoCVS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect number of arguments to call function &apos;{0}&apos; (five arguments are expected: `=CreateSIORefSelBitVector($OutputDriveLevels, $ThresholdLevels, $sio_info, $PinTypes, $width)`)..
        /// </summary>
        internal static string ParamCntErr_CreateSIORefSelCSV {
            get {
                return ResourceManager.GetString("ParamCntErr_CreateSIORefSelCSV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect number of arguments to call function &apos;{0}&apos; (four arguments are expected: `=CreateSIOVTripBitVector($ThresholdLevels, $sio_info, $PinTypes, $width)`)..
        /// </summary>
        internal static string ParamCntErr_CreateSIOVTripBitVector {
            get {
                return ResourceManager.GetString("ParamCntErr_CreateSIOVTripBitVector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect number of arguments to call function &apos;{0}&apos; (three arguments are expected: `=CreateVTripCSV($ThresholdLevels, $PinTypes, $width)`)..
        /// </summary>
        internal static string ParamCntErr_CreateVTripCSV {
            get {
                return ResourceManager.GetString("ParamCntErr_CreateVTripCSV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect number of arguments to call function &apos;{0}&apos; (five arguments are expected: `=IsHomogeneous($PinTypes, $sio_info, $sio_refsel, $NumPins, $sio_group_cnt)`)..
        /// </summary>
        internal static string ParamCntErr_IsHomogeneous {
            get {
                return ResourceManager.GetString("ParamCntErr_IsHomogeneous", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect number of arguments to call function &apos;{0}&apos; (seven arguments are expected: `=IsHomogeneous($PinTypes, $sio_info, $sio_refsel, $DisplayOutputHWConnections, $DisplayInputHWConnections, $NumPins, $sio_group_cnt)`)..
        /// </summary>
        internal static string ParamCntErr_IsHomogeneous_v2 {
            get {
                return ResourceManager.GetString("ParamCntErr_IsHomogeneous_v2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect number of arguments to call function &apos;{0}&apos; (three arguments are expected: `=UsesInterrupts($InterruptModes, $PinTypes, $NumPins)`)..
        /// </summary>
        internal static string ParamCntErr_UsesInterrupts {
            get {
                return ResourceManager.GetString("ParamCntErr_UsesInterrupts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap PinAliasImage {
            get {
                object obj = ResourceManager.GetObject("PinAliasImage", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap PinImage {
            get {
                object obj = ResourceManager.GetObject("PinImage", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] ResPullDownEMF {
            get {
                object obj = ResourceManager.GetObject("ResPullDownEMF", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] ResPullUpDownEMF {
            get {
                object obj = ResourceManager.GetObject("ResPullUpDownEMF", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] ResPullUpEMF {
            get {
                object obj = ResourceManager.GetObject("ResPullUpEMF", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin.
        /// </summary>
        internal static string SBComponentTitle {
            get {
                return ResourceManager.GetString("SBComponentTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pins.
        /// </summary>
        internal static string SBComponentTitlePlural {
            get {
                return ResourceManager.GetString("SBComponentTitlePlural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SIO Pair.
        /// </summary>
        internal static string SIOPair {
            get {
                return ResourceManager.GetString("SIOPair", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap SIOPinImage {
            get {
                object obj = ResourceManager.GetObject("SIOPinImage", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] StrongDriveEMF {
            get {
                object obj = ResourceManager.GetObject("StrongDriveEMF", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Associated terminal not found..
        /// </summary>
        internal static string TermNotFound {
            get {
                return ResourceManager.GetString("TermNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unhandled bit vector param type &apos;{0}&apos;..
        /// </summary>
        internal static string UnhandledBitVectorParamType {
            get {
                return ResourceManager.GetString("UnhandledBitVectorParamType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unhandled display HW connection value &apos;{0}&apos;..
        /// </summary>
        internal static string UnhandledDisplayHWConnection {
            get {
                return ResourceManager.GetString("UnhandledDisplayHWConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unhandled drive mode &apos;{0}&apos;..
        /// </summary>
        internal static string UnhandledDriveMode {
            get {
                return ResourceManager.GetString("UnhandledDriveMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unhandled input only bit vector param type &apos;{0}&apos;..
        /// </summary>
        internal static string UnhandledInputOnlyBitVectorParamType {
            get {
                return ResourceManager.GetString("UnhandledInputOnlyBitVectorParamType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unhandled input threshold &apos;{0}&apos;.
        /// </summary>
        internal static string UnhandledInputThreshold {
            get {
                return ResourceManager.GetString("UnhandledInputThreshold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unhandled layout mode &apos;{0}&apos;..
        /// </summary>
        internal static string UnhandledLayoutMode {
            get {
                return ResourceManager.GetString("UnhandledLayoutMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unhandled output only bit vector param type &apos;{0}&apos;..
        /// </summary>
        internal static string UnhandledOutputBitVectorParamType {
            get {
                return ResourceManager.GetString("UnhandledOutputBitVectorParamType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unhandled output drive level type &apos;{0}&apos;..
        /// </summary>
        internal static string UnhandledOutputDriveLevel {
            get {
                return ResourceManager.GetString("UnhandledOutputDriveLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unhandled param name &apos;{0}&apos;..
        /// </summary>
        internal static string UnhandledParamName {
            get {
                return ResourceManager.GetString("UnhandledParamName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unhandled pin type &apos;{0}&apos;.
        /// </summary>
        internal static string UnhandledPinType {
            get {
                return ResourceManager.GetString("UnhandledPinType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unhandled SIO group value &apos;{0}&apos;..
        /// </summary>
        internal static string UnhandledSIOGroup {
            get {
                return ResourceManager.GetString("UnhandledSIOGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unhandled sio info &apos;{0}&apos;.
        /// </summary>
        internal static string UnhandledSIOInfo {
            get {
                return ResourceManager.GetString("UnhandledSIOInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unhandled sio ref sel value &apos;{0}&apos;.
        /// </summary>
        internal static string UnhandledSIORefSel {
            get {
                return ResourceManager.GetString("UnhandledSIORefSel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unhandled slew rate &apos;{0}&apos;.
        /// </summary>
        internal static string UnhandledSlewRate {
            get {
                return ResourceManager.GetString("UnhandledSlewRate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unhandled threshold level &apos;{0}&apos;..
        /// </summary>
        internal static string UnhandledThreshold {
            get {
                return ResourceManager.GetString("UnhandledThreshold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown parameter &apos;{0}&apos;.
        /// </summary>
        internal static string UnknownParam {
            get {
                return ResourceManager.GetString("UnknownParam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown terminal name &apos;{0}&apos;..
        /// </summary>
        internal static string UnknownTerm {
            get {
                return ResourceManager.GetString("UnknownTerm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap UnpairSIOsImage {
            get {
                object obj = ResourceManager.GetObject("UnpairSIOsImage", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
