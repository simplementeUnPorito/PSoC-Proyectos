//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TrimMargin_v3_0 {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TrimMargin_v3_0.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Built-in.
        /// </summary>
        internal static string BuiltInTabName {
            get {
                return ResourceManager.GetString("BuiltInTabName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C1 external scaling capacitor value must be between {0} uF and {1} uF..
        /// </summary>
        internal static string C1CapacitorError {
            get {
                return ResourceManager.GetString("C1CapacitorError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Configure {
            get {
                object obj = ResourceManager.GetObject("Configure", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incremental.
        /// </summary>
        internal static string ControllerMethodIncremental {
            get {
                return ResourceManager.GetString("ControllerMethodIncremental", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Integral.
        /// </summary>
        internal static string ControllerMethodIntegral {
            get {
                return ResourceManager.GetString("ControllerMethodIntegral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Control sample time value must be between {0} ms and {1} ms..
        /// </summary>
        internal static string ControlSampleTime {
            get {
                return ResourceManager.GetString("ControlSampleTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vadj voltage value must be between {0} V and {1} V..
        /// </summary>
        internal static string ControlVoltageError {
            get {
                return ResourceManager.GetString("ControlVoltageError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Copy {
            get {
                object obj = ResourceManager.GetObject("Copy", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} tab table contains wrong data..
        /// </summary>
        internal static string DataGridError {
            get {
                return ResourceManager.GetString("DataGridError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} table contains empty cells..
        /// </summary>
        internal static string DrcNullValuesError {
            get {
                return ResourceManager.GetString("DrcNullValuesError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Export {
            get {
                object obj = ResourceManager.GetObject("Export", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export All.
        /// </summary>
        internal static string ExportAllTitle {
            get {
                return ResourceManager.GetString("ExportAllTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export to File.
        /// </summary>
        internal static string ExportDialogHeader {
            get {
                return ResourceManager.GetString("ExportDialogHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Negative.
        /// </summary>
        internal static string FeedbackNegative {
            get {
                return ResourceManager.GetString("FeedbackNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Positive.
        /// </summary>
        internal static string FeedbackPositive {
            get {
                return ResourceManager.GetString("FeedbackPositive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File with this name already exists. Do you want to replace it?.
        /// </summary>
        internal static string FileExists {
            get {
                return ResourceManager.GetString("FileExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot read the file {0}..
        /// </summary>
        internal static string FileReadError {
            get {
                return ResourceManager.GetString("FileReadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot write to the file {0}..
        /// </summary>
        internal static string FileWriteError {
            get {
                return ResourceManager.GetString("FileWriteError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Glitch filter length must be between {0} and {1}..
        /// </summary>
        internal static string GFLengthError {
            get {
                return ResourceManager.GetString("GFLengthError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Power converter circuit parameters.
        /// </summary>
        internal static string HeaderPowerConv {
            get {
                return ResourceManager.GetString("HeaderPowerConv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PWM parameters.
        /// </summary>
        internal static string HeaderPWMParams {
            get {
                return ResourceManager.GetString("HeaderPWMParams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap imadd {
            get {
                object obj = ResourceManager.GetObject("imadd", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap imdelete {
            get {
                object obj = ResourceManager.GetObject("imdelete", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap imgNegative {
            get {
                object obj = ResourceManager.GetObject("imgNegative", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap imgPositive {
            get {
                object obj = ResourceManager.GetObject("imgPositive", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fixed Function.
        /// </summary>
        internal static string ImplementationFixedFunction {
            get {
                return ResourceManager.GetString("ImplementationFixedFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} implementation is not supported on the selected device. Please select {1}..
        /// </summary>
        internal static string ImplementationNotSupported {
            get {
                return ResourceManager.GetString("ImplementationNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UDB.
        /// </summary>
        internal static string ImplementationUDB {
            get {
                return ResourceManager.GetString("ImplementationUDB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Import {
            get {
                object obj = ResourceManager.GetObject("Import", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import All.
        /// </summary>
        internal static string ImportAllTitle {
            get {
                return ResourceManager.GetString("ImportAllTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All data in the grid will be lost after import. Would you like to continue?.
        /// </summary>
        internal static string ImportConfirmation {
            get {
                return ResourceManager.GetString("ImportConfirmation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import from File.
        /// </summary>
        internal static string ImportDialogHeader {
            get {
                return ResourceManager.GetString("ImportDialogHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input voltage scaling factor must be between {0} and {1}..
        /// </summary>
        internal static string InputScalingFactorError {
            get {
                return ResourceManager.GetString("InputScalingFactorError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot insert data into the table. The data format is not valid..
        /// </summary>
        internal static string InvalidDataFormat {
            get {
                return ResourceManager.GetString("InvalidDataFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The data in the clipboard does match the columns in the table..
        /// </summary>
        internal static string InvalidDataInClipboard {
            get {
                return ResourceManager.GetString("InvalidDataInClipboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more power converters have invalid configuration. Open the configure dialog and correct the values indicated with an error icon..
        /// </summary>
        internal static string InvalidTableData {
            get {
                return ResourceManager.GetString("InvalidTableData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to load the configuration. .
        /// </summary>
        internal static string LoadConfigErrorMsg {
            get {
                return ResourceManager.GetString("LoadConfigErrorMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred during loading configuration parameters..
        /// </summary>
        internal static string LoadConfigParamsErrorMsg {
            get {
                return ResourceManager.GetString("LoadConfigParamsErrorMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All data in the customizer will be lost after import. Would you like to continue?.
        /// </summary>
        internal static string LoadConfirmation {
            get {
                return ResourceManager.GetString("LoadConfirmation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load from File.
        /// </summary>
        internal static string LoadDialogHeader {
            get {
                return ResourceManager.GetString("LoadDialogHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Margin high percentage value must be between {0} and {1}..
        /// </summary>
        internal static string MarginHighPercentageError {
            get {
                return ResourceManager.GetString("MarginHighPercentageError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Margin high voltage value must be between {0} V and {1} V..
        /// </summary>
        internal static string MarginHighVoltageError {
            get {
                return ResourceManager.GetString("MarginHighVoltageError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Margin high voltage value must be less than or equal to calculated maximum voltage..
        /// </summary>
        internal static string MarginHighVoltageSanityCheck {
            get {
                return ResourceManager.GetString("MarginHighVoltageSanityCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Margin low percentage value must be between {0} and {1}..
        /// </summary>
        internal static string MarginLowPercentageError {
            get {
                return ResourceManager.GetString("MarginLowPercentageError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Margin low voltage value must be between {0} V and {1} V..
        /// </summary>
        internal static string MarginLowVoltageError {
            get {
                return ResourceManager.GetString("MarginLowVoltageError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Margin low voltage value must be less than or equal to nominal output voltage..
        /// </summary>
        internal static string MarginLowVoltageSanityCheck {
            get {
                return ResourceManager.GetString("MarginLowVoltageSanityCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Desired Vout ripple value must be between {0} mV and {1} mV..
        /// </summary>
        internal static string MaxRippleError {
            get {
                return ResourceManager.GetString("MaxRippleError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum output voltage value must be between {0} V and {1} V..
        /// </summary>
        internal static string MaxVoltageError {
            get {
                return ResourceManager.GetString("MaxVoltageError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum voltage value must be less than maximum voltage value..
        /// </summary>
        internal static string MinMaxVoltageSanityCheck {
            get {
                return ResourceManager.GetString("MinMaxVoltageSanityCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap minus {
            get {
                object obj = ResourceManager.GetObject("minus", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum output voltage value must be between {0} V and {1} V..
        /// </summary>
        internal static string MinVoltageError {
            get {
                return ResourceManager.GetString("MinVoltageError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calculated minimum voltage value must be less than or equal to margin low voltage..
        /// </summary>
        internal static string MinVoltageSanityCheck {
            get {
                return ResourceManager.GetString("MinVoltageSanityCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Startup voltage value must be greater than or equal to calculated minimum voltage..
        /// </summary>
        internal static string MinVoltageToVStartupSanityCheck {
            get {
                return ResourceManager.GetString("MinVoltageToVStartupSanityCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        internal static string MsgErrorTitle {
            get {
                return ResourceManager.GetString("MsgErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning.
        /// </summary>
        internal static string MsgWarningTitle {
            get {
                return ResourceManager.GetString("MsgWarningTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nominal output voltage value must be between {0} V and {1} V..
        /// </summary>
        internal static string NominalOutputVoltageError {
            get {
                return ResourceManager.GetString("NominalOutputVoltageError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nominal output voltage value must be less than or equal to margin high voltage..
        /// </summary>
        internal static string NominalOutputVoltageSanityCheck {
            get {
                return ResourceManager.GetString("NominalOutputVoltageSanityCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PWM resolution must be between {0} and {1}..
        /// </summary>
        internal static string NumPWMResolutionError {
            get {
                return ResourceManager.GetString("NumPWMResolutionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of voltages must be between {0} and {1}..
        /// </summary>
        internal static string NumVoltagesError {
            get {
                return ResourceManager.GetString("NumVoltagesError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of converters should be in the range {0}-{1}, when {2} to {3}-bit PWM resolution selected..
        /// </summary>
        internal static string NumVoltagesWithPWMResolutionError {
            get {
                return ResourceManager.GetString("NumVoltagesWithPWMResolutionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Open {
            get {
                object obj = ResourceManager.GetObject("Open", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Paste {
            get {
                object obj = ResourceManager.GetObject("Paste", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap plus {
            get {
                object obj = ResourceManager.GetObject("plus", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to R1 external scaling resistor value must be between {0} kOhm and {1} kOhm..
        /// </summary>
        internal static string R1ResistorError {
            get {
                return ResourceManager.GetString("R1ResistorError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to R2 external scaling resistor value must be between {0} kOhm and {1} kOhm..
        /// </summary>
        internal static string R2ResistorError {
            get {
                return ResourceManager.GetString("R2ResistorError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to R3 external scaling resistor value must be between {0} kOhm and {1} kOhm..
        /// </summary>
        internal static string R3ResistorError {
            get {
                return ResourceManager.GetString("R3ResistorError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to R4 external scaling resistor value must be between {0} kOhm and {1} kOhm..
        /// </summary>
        internal static string R4ResistorError {
            get {
                return ResourceManager.GetString("R4ResistorError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Save {
            get {
                object obj = ResourceManager.GetObject("Save", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save to File.
        /// </summary>
        internal static string SaveDialogHeader {
            get {
                return ResourceManager.GetString("SaveDialogHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings have incorrect values. You must redefine them..
        /// </summary>
        internal static string SettingsIncorrectValues {
            get {
                return ResourceManager.GetString("SettingsIncorrectValues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap show_hide_columns {
            get {
                object obj = ResourceManager.GetObject("show_hide_columns", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Startup voltage value must be between {0} V and {1} V..
        /// </summary>
        internal static string StartupVoltageError {
            get {
                return ResourceManager.GetString("StartupVoltageError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Summary.
        /// </summary>
        internal static string SummaryTabName {
            get {
                return ResourceManager.GetString("SummaryTabName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The external capacitor value used on the PCB to calculate the actual ripple..
        /// </summary>
        internal static string ToolTipC1 {
            get {
                return ResourceManager.GetString("ToolTipC1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The calculated maximum voltage based on actual values of the external RC circuit..
        /// </summary>
        internal static string ToolTipCalcMaxVoltageActual {
            get {
                return ResourceManager.GetString("ToolTipCalcMaxVoltageActual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the preferred E series for capacitors..
        /// </summary>
        internal static string ToolTipCapacitorESeries {
            get {
                return ResourceManager.GetString("ToolTipCapacitorESeries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If checked, allows to enter the actual value used on the PCB. 
        ///Otherwise the value is calculated automatically..
        /// </summary>
        internal static string ToolTipCheckBoxRCEn {
            get {
                return ResourceManager.GetString("ToolTipCheckBoxRCEn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Period time on how often the Active Trim API is called for this converter. This period time has to be in average 3x longer than the time it takes to scan the voltage output of the converter (filters should also be taken in consideration)..
        /// </summary>
        internal static string ToolTipControlSampleTime {
            get {
                return ResourceManager.GetString("ToolTipControlSampleTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The text field of 16 characters - for annotation purposes only..
        /// </summary>
        internal static string ToolTipConverterName {
            get {
                return ResourceManager.GetString("ToolTipConverterName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum allowable ripple that appears on the output of the voltage regulator. 
        ///The ripple effect comes from the RC circuit designed to trim/margin the converter..
        /// </summary>
        internal static string ToolTipDesiredVoutRipple {
            get {
                return ResourceManager.GetString("ToolTipDesiredVoutRipple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The desired converter output voltage in response to a margin high request in % of the nominal voltage..
        /// </summary>
        internal static string ToolTipMarginHighPercent {
            get {
                return ResourceManager.GetString("ToolTipMarginHighPercent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The desired converter output voltage in response to a margin high request in volts..
        /// </summary>
        internal static string ToolTipMarginHighV {
            get {
                return ResourceManager.GetString("ToolTipMarginHighV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The desired converter output voltage in response to a margin low request in % of the nominal voltage..
        /// </summary>
        internal static string ToolTipMarginLowPercent {
            get {
                return ResourceManager.GetString("ToolTipMarginLowPercent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The desired converter output voltage in response to a margin low request in volts..
        /// </summary>
        internal static string ToolTipMarginLowV {
            get {
                return ResourceManager.GetString("ToolTipMarginLowV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum converter output voltage..
        /// </summary>
        internal static string ToolTipMaxVoltage {
            get {
                return ResourceManager.GetString("ToolTipMaxVoltage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minimum converter output voltage..
        /// </summary>
        internal static string ToolTipMinVoltage {
            get {
                return ResourceManager.GetString("ToolTipMinVoltage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The calculated minimum voltage based on actual values of the external RC circuit..
        /// </summary>
        internal static string ToolTipMinVoltageActual {
            get {
                return ResourceManager.GetString("ToolTipMinVoltageActual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The control voltage at the Adjust/Feedback control pin to achieve the nominal output voltage..
        /// </summary>
        internal static string ToolTipNominalVadjOutput {
            get {
                return ResourceManager.GetString("ToolTipNominalVadjOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The nominal converter output voltage..
        /// </summary>
        internal static string ToolTipNominalVoltage {
            get {
                return ResourceManager.GetString("ToolTipNominalVoltage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The external scaling resistor value (in kΩ) required to achieve the correct voltage on the Adjust/Feedback 
        ///control pin to achieve the nominal output voltage when the PWM output is disabled..
        /// </summary>
        internal static string ToolTipR1 {
            get {
                return ResourceManager.GetString("ToolTipR1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The external scaling resistor value (in kΩ) required to achieve the correct voltage on the Adjust/Feedback 
        ///control pin to achieve the nominal output voltage when the PWM output is disabled..
        /// </summary>
        internal static string ToolTipR2 {
            get {
                return ResourceManager.GetString("ToolTipR2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ideal calculated value for R2..
        /// </summary>
        internal static string ToolTipR2Calc {
            get {
                return ResourceManager.GetString("ToolTipR2Calc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The external resistor value used on the PCB to calculate the actual dynamic range..
        /// </summary>
        internal static string ToolTipR3 {
            get {
                return ResourceManager.GetString("ToolTipR3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sum of the actual resistance values for R3 and R4..
        /// </summary>
        internal static string ToolTipR3plusR4Actual {
            get {
                return ResourceManager.GetString("ToolTipR3plusR4Actual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sum of the calculated resistance values chosen in the customizer for R3 and R4..
        /// </summary>
        internal static string ToolTipR3plusR4Calc {
            get {
                return ResourceManager.GetString("ToolTipR3plusR4Calc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The external resistor value used on the PCB to calculate the actual ripple..
        /// </summary>
        internal static string ToolTipR4 {
            get {
                return ResourceManager.GetString("ToolTipR4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the preferred E series for resistors..
        /// </summary>
        internal static string ToolTipResistorsESeries {
            get {
                return ResourceManager.GetString("ToolTipResistorsESeries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user configurable startup voltage for the converter..
        /// </summary>
        internal static string ToolTipStartupVoltage {
            get {
                return ResourceManager.GetString("ToolTipStartupVoltage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The output voltage to use with the associated PWM output pin..
        /// </summary>
        internal static string ToolTipVohOfPwmOutput {
            get {
                return ResourceManager.GetString("ToolTipVohOfPwmOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum allowable ripple that appears on the output of the voltage regulator. 
        ///The ripple effect comes from the RC circuit designed to trim/margin the converter..
        /// </summary>
        internal static string ToolTipVoutRippleActual {
            get {
                return ResourceManager.GetString("ToolTipVoutRippleActual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap trim_margin {
            get {
                object obj = ResourceManager.GetObject("trim_margin", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nominal Vadj voltage (V).
        /// </summary>
        internal static string VadjLabel {
            get {
                return ResourceManager.GetString("VadjLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Voh of PWM output voltage value must be between {0} V and {1} V..
        /// </summary>
        internal static string VDDIOVoltageError {
            get {
                return ResourceManager.GetString("VDDIOVoltageError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nominal voltage should be greater or equal than UV fault threshold and lower or equal than OV  fault threshold..
        /// </summary>
        internal static string VoltagesCompareSanityCheck {
            get {
                return ResourceManager.GetString("VoltagesCompareSanityCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vref voltage (V).
        /// </summary>
        internal static string VrefLabel {
            get {
                return ResourceManager.GetString("VrefLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vref voltage value must be between {0} V and {1} V..
        /// </summary>
        internal static string VrefVoltageError {
            get {
                return ResourceManager.GetString("VrefVoltageError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Startup voltage value must be less than or equal to calculated maximum voltage..
        /// </summary>
        internal static string VStartupToMaxVoltageSanityCheck {
            get {
                return ResourceManager.GetString("VStartupToMaxVoltageSanityCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Parameter: The configure dialog contains wrong data..
        /// </summary>
        internal static string WrongDataMsg {
            get {
                return ResourceManager.GetString("WrongDataMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TrimMargin Error.
        /// </summary>
        internal static string WrongDataMsgTitle {
            get {
                return ResourceManager.GetString("WrongDataMsgTitle", resourceCulture);
            }
        }
    }
}
