<?xml version="1.0" encoding="us-ascii"?>

<deviceData version="1" xmlns="http://cypress.com/xsd/cydevicedata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://cypress.com/xsd/cydevicedata cydevicedata.xsd">

	<block name="`$INSTANCE_NAME`" desc="" visible="true">

		<block name="UAB" desc="UAB switch cap, opamp and switch control" visible="true">
<!-- ================ Register definitions for UAB IP Block. =============== -->
			<register name="UAB_CTRL" address="0x40340000" bitWidth="32" desc="Global UAB control">

<!-- ***********************UAB0_UAB_CTRL_REG fields *********************** -->
<!-- Global UAB control -->
<!-- *********************************************************************** -->
				<field name="ENABLED" from="31" to="31" access="RW" desc="- 0: UAB IP disabled (put analog in power down, open all switches)&#xA;- 1: UAB IP enabled">
				</field>
			</register>
			<register name="INTR" address="0x40340020" bitWidth="32" desc="Interrupt request register">

<!-- *************************UAB0_INTR_REG fields ************************* -->
<!-- Interrupt request register -->
<!-- *********************************************************************** -->
				<field name="COMP0" from="0" to="0" access="RW" desc="Comparator 0 Interrupt: hardware sets this interrupt when comparator 0 triggers. Write with '1' to clear bit.">
				</field>
				<field name="VDAC0_EMPTY" from="1" to="1" access="RW" desc="VDAC 0 Interrupt: hardware sets this interrupt when VDAC 0 next value field is empty. Write with '1' to clear bit.">
				</field>
				<field name="DC0_RES" from="2" to="2" access="RW" desc="Decimator 0 Result Interrupt: hardware sets this interrupt when Decimator 0 writes a new result value in DC0_RES register. Write with '1' to clear bit.">
				</field>
				<field name="COMP1" from="16" to="16" access="RW" desc="Comparator 1 Interrupt: hardware sets this interrupt when comparator 1 triggers. Write with '1' to clear bit.">
				</field>
				<field name="VDAC1_EMPTY" from="17" to="17" access="RW" desc="VDAC 1 Interrupt: hardware sets this interrupt when VDAC 1 next value field is empty. Write with '1' to clear bit.">
				</field>
				<field name="DC1_RES" from="18" to="18" access="RW" desc="Decimator 1 Result Interrupt: hardware sets this interrupt when Decimator 1 writes a new result value in DC1_RES register. Write with '1' to clear bit.">
				</field>
			</register>
			<register name="INTR_SET" address="0x40340024" bitWidth="32" desc="Interrupt request set register">

<!-- ***********************UAB0_INTR_SET_REG fields *********************** -->
<!-- Interrupt request set register -->
<!-- *********************************************************************** -->
				<field name="COMP0_SET" from="0" to="0" access="RW" desc="Write with '1' to set corresponding bit in interrupt request register.">
				</field>
				<field name="VDAC0_EMPTY_SET" from="1" to="1" access="RW" desc="Write with '1' to set corresponding bit in interrupt request register.">
				</field>
				<field name="DC0_RES_SET" from="2" to="2" access="RW" desc="Write with '1' to set corresponding bit in interrupt request register.">
				</field>
				<field name="COMP1_SET" from="16" to="16" access="RW" desc="Write with '1' to set corresponding bit in interrupt request register.">
				</field>
				<field name="VDAC1_EMPTY_SET" from="17" to="17" access="RW" desc="Write with '1' to set corresponding bit in interrupt request register.">
				</field>
				<field name="DC1_RES_SET" from="18" to="18" access="RW" desc="Write with '1' to set corresponding bit in interrupt request register.">
				</field>
			</register>
			<register name="INTR_MASK" address="0x40340028" bitWidth="32" desc="Interrupt request mask">

<!-- ***********************UAB0_INTR_MASK_REG fields ********************** -->
<!-- Interrupt request mask -->
<!-- *********************************************************************** -->
				<field name="COMP0_MASK" from="0" to="0" access="RW" desc="Mask bit for corresponding bit in interrupt request register.">
				</field>
				<field name="VDAC0_EMPTY_MASK" from="1" to="1" access="RW" desc="Mask bit for corresponding bit in interrupt request register.">
				</field>
				<field name="DC0_RES_MASK" from="2" to="2" access="RW" desc="Mask bit for corresponding bit in interrupt request register.">
				</field>
				<field name="COMP1_MASK" from="16" to="16" access="RW" desc="Mask bit for corresponding bit in interrupt request register.">
				</field>
				<field name="VDAC1_EMPTY_MASK" from="17" to="17" access="RW" desc="Mask bit for corresponding bit in interrupt request register.">
				</field>
				<field name="DC1_RES_MASK" from="18" to="18" access="RW" desc="Mask bit for corresponding bit in interrupt request register.">
				</field>
			</register>
			<register name="INTR_MASKED" address="0x4034002c" bitWidth="32" desc="Interrupt request masked">

<!-- **********************UAB0_INTR_MASKED_REG fields ********************* -->
<!-- Interrupt request masked -->
<!-- *********************************************************************** -->
				<field name="COMP0_MASKED" from="0" to="0" access="R" desc="Logical and of corresponding request and mask bits.">
				</field>
				<field name="VDAC0_EMPTY_MASKED" from="1" to="1" access="R" desc="Logical and of corresponding request and mask bits.">
				</field>
				<field name="DC0_RES_MASKED" from="2" to="2" access="R" desc="Logical and of corresponding request and mask bits.">
				</field>
				<field name="COMP1_MASKED" from="16" to="16" access="R" desc="Logical and of corresponding request and mask bits.">
				</field>
				<field name="VDAC1_EMPTY_MASKED" from="17" to="17" access="R" desc="Logical and of corresponding request and mask bits.">
				</field>
				<field name="DC1_RES_MASKED" from="18" to="18" access="R" desc="Logical and of corresponding request and mask bits.">
				</field>
			</register>
			<register name="OA0_CTRL" address="0x40340200" bitWidth="32" desc="Opamp, comparator, buffer  controls">

<!-- ***********************UAB0_OA0_CTRL_REG fields *********************** -->
<!-- Opamp, comparator, buffer  controls -->
<!-- *********************************************************************** -->
				<field name="OA0_PWR" from="2" to="0" access="RW" desc="Opamp0 power level">
				</field>
				<field name="CMP0_PWR" from="10" to="8" access="RW" desc="Comparator0 power level">
				</field>
				<field name="CMP0_EDGE" from="13" to="12" access="RW" desc="Comparator0 edge detect for interrupt and trigger">

<!-- CMP0_EDGE bitfield enumerated values -->
					<value name="DISABLE" value="0" desc="Disabled, no interrupts will be detected"/>
					<value name="RISING" value="1" desc="Rising edge"/>
					<value name="FALLING" value="10" desc="Falling edge"/>
					<value name="BOTH" value="11" desc="Both rising and falling edges"/>
				</field>
				<field name="CMP0_DSI_LEVEL" from="14" to="14" access="RW" desc="Comparator0 trigger out level : 0=pulse, 1=level">
				</field>
				<field name="CTRL0_SPARE" from="15" to="15" access="RW" desc="Spare bit">
				</field>
				<field name="REF0_PWR" from="18" to="16" access="RW" desc="Reference0 buffer power level">
				</field>
				<field name="REF0_PTS" from="19" to="19" access="RW" desc="1- Pull the Reference0 buffer output to VDDA">
				</field>
				<field name="AGND0_PWR" from="22" to="20" access="RW" desc="Agnd0 buffer power level">
				</field>
				<field name="AGND0_PTS" from="23" to="23" access="RW" desc="1 - Pull Agnd0 buffer output to VDDA">
				</field>
				<field name="SW_GG" from="24" to="24" access="RW" desc="Connect outputs of Agnd0 and Agnd1 buffer, one buffer must be off.&#xA;This is to drive both UAB halves with the same buffer, so both halves get the same offset noise.">
				</field>
				<field name="SPARE0_EN" from="25" to="25" access="RW" desc="1 - Enable spare reference">
				</field>
				<field name="H0_PWR" from="31" to="30" access="RW" desc="UAB Half, power profile">

<!-- H0_PWR bitfield enumerated values -->
					<value name="NORMAL" value="0" desc="Normal, for normal analog clock speeds"/>
					<value name="ULTRA_LOW" value="1" desc="Ultra low power, only allowed for lower analog clock speeds"/>
					<value name="ULTRA_HIGH" value="10" desc="Ultra high performance, for higher analog clock speeds (also ultra high power)"/>
					<value name="Reserved" value="11" desc="Reserved, do not use"/>
				</field>
			</register>
			<register name="CAP_CTRL0" address="0x40340204" bitWidth="32" desc="Capacitance controls">

<!-- ***********************UAB0_CAP_CTRL0_REG fields ********************** -->
<!-- Capacitance controls -->
<!-- *********************************************************************** -->
				<field name="CB0_GND" from="5" to="5" access="RW" desc="Ground unused caps of CB0 array&#xA;0: leave unused caps floating&#xA;1: ground unused caps (typical when attentuation Cap is used, e.g. for VDAC use-case)">
				</field>
				<field name="CC0_GND" from="6" to="6" access="RW" desc="Ground unused caps of CC0 array&#xA;0: leave unused caps floating&#xA;1: ground unused caps (typical when attentuation Cap is used)">
				</field>
				<field name="FRC0_SIGN_BIT" from="28" to="28" access="RW" desc="Forces the sign bit to be 1 in DAC mode.  This is used to achieve &#xA;0 - AGND0 range for unsigned numbers using DAC mode 2">
				</field>
				<field name="DAC0_MODE_EN" from="29" to="29" access="RW" desc="0: SIGN0_VAL can be programmed to be a modbit source&#xA;1: SIGN0_VAL is a dedicated sign bit (FW modbit source tied to 0)">
				</field>
				<field name="DAC0_MODE" from="31" to="30" access="RW" desc="DAC mode, this determines the AB Cap Value decoding">

<!-- DAC0_MODE bitfield enumerated values -->
					<value name="UNSIGNED12" value="0" desc="Off or Unsigned 12-bit VDAC, i.e. no AB Cap value decoding.&#xA;SIGN1_VAL can be used as Firmware controlled modbit (e.g. to invert the Voltage for a Sign + Magnitude VDAC)"/>
					<value name="VIRT_SIGNED12" value="1" desc="Virtual signed 12-bits' VDAC. AB Cap value decoding: &#xA;add 0x800 to the 12-bit AB Cap Value (=invert MSB), to convert the lowest signed number 0x800 to the lowest unsigned number 0x000. This is the same as the SAR handles 12-bit 'virtual' signed numbers."/>
					<value name="SIGNED13" value="10" desc="Signed 13-bit twos complement. AB Cap value decoding: &#xA;for negative values (SIGN0_VAL=1) the AB Cap values are inverted, the 64th B cap unit is enabled and the Voltage should be inverted.&#xA;- Voltage inversion only works if the right clocking waveforms, switch settings and reference voltages are used.&#xA;- Enabling the 64th B cap unit adds 1 so that only a AB Cap value inversion is needed to create a true twos complement."/>
					<value name="RESERVED" value="11" desc=""/>
				</field>
			</register>
			<register name="CAP_ABCF0_VAL" address="0x40340208" bitWidth="32" desc="Capacitance values for CA0, CB0, CC0 and CF0">

<!-- *********************UAB0_CAP_ABCF0_VAL_REG fields ******************** -->
<!-- Capacitance values for CA0, CB0, CC0 and CF0 -->
<!-- *********************************************************************** -->
				<field name="CB0_VAL" from="5" to="0" access="RW" desc="Cap B0 Value, in DAC_MODE 1 and 2 this value is decoded">
				</field>
				<field name="CA0_VAL" from="11" to="6" access="RW" desc="Cap A0 Value, in DAC_MODE 1 and 2 this value is decoded">
				</field>
				<field name="SIGN0_VAL" from="12" to="12" access="RW" desc="Sign bit Value, when used in DAC_MODE, otherwise Firmware modbit.&#xA;In DAC_MODE the modbit should be used to invert the voltage on the AB Caps for the negative DAC values.">
				</field>
				<field name="CB0_64" from="13" to="13" access="RW" desc="Enable 64th Cap of CB0 array.  In DAC mode the FW setting is overridden by the hardware based on DAC_MODE setting.&#xA;1 - Enables the 64th cap.  This will also set CB0_val[5:0] to be 6'h3F">
				</field>
				<field name="CC0_VAL" from="21" to="16" access="RW" desc="Cap C0 Value">
				</field>
				<field name="CF0_VAL" from="28" to="24" access="RW" desc="Cap F0 Value [2..64 is the range in steps of 2]">
				</field>
			</register>
			<register name="CAP_AB0_VAL_NXT" address="0x4034020c" bitWidth="32" desc="Next capacitance values for CA0 and CB0">

<!-- ********************UAB0_CAP_AB0_VAL_NXT_REG fields ******************* -->
<!-- Next capacitance values for CA0 and CB0 -->
<!-- *********************************************************************** -->
				<field name="CB0_VAL" from="5" to="0" access="RW" desc="Cap B0 Value">
				</field>
				<field name="CA0_VAL" from="11" to="6" access="RW" desc="Cap A0 Value">
				</field>
				<field name="SIGN0_VAL" from="12" to="12" access="RW" desc="Sign bit Value">
				</field>
			</register>
			<register name="CAP_CF0_VAL_NXT" address="0x40340210" bitWidth="32" desc="Next capacitance values for CC0 and CF0">

<!-- ********************UAB0_CAP_CF0_VAL_NXT_REG fields ******************* -->
<!-- Next capacitance values for CC0 and CF0 -->
<!-- *********************************************************************** -->
				<field name="CC0_VAL" from="21" to="16" access="RW" desc="Cap C0 Value">
				</field>
				<field name="CF0_VAL" from="28" to="24" access="RW" desc="Cap F0 Value">
				</field>
				<field name="CC0_VAL_UPDATE" from="30" to="30" access="RW" desc="1 - Update the CC0 cap value with CAP_CC0_VAL_NXT.CC0_VAL">
				</field>
				<field name="CF0_VAL_UPDATE" from="31" to="31" access="RW" desc="1 - Update the CF0 cap value with CAP_CF0_VAL_NXT.CF0_VAL">
				</field>
			</register>
			<register name="STARTUP_DELAY0" address="0x40340220" bitWidth="32" desc="Startup delay">

<!-- ********************UAB0_STARTUP_DELAY0_REG fields ******************** -->
<!-- Startup delay -->
<!-- *********************************************************************** -->
				<field name="STARTUP_DELAY" from="15" to="0" access="RW" desc="Startup delay to synchronize the UAB-SAR interface. The usage and meaning of this field depends on the value of the ALIGN_MODE bit (below).   A value of 0 disables this function.">
				</field>
				<field name="ALIGN_MODE" from="16" to="16" access="RW" desc="0 - STARTUP_DELAY is number of clk_hf clocks to delay the UAB clock after a SAR Trigger for UAB-SAR alignment in scheduled mode&#xA;1 - STARTUP_DELAY is number of clk_hf clocks to delay UAB trigger to SAR for UAB-SAR alignment in unscheduled mode">
				</field>
			</register>
			<register name="SUBSAMPLE_CTRL0" address="0x40340224" bitWidth="32" desc="Subsample control">

<!-- ********************UAB0_SUBSAMPLE_CTRL0_REG fields ******************* -->
<!-- Subsample control -->
<!-- *********************************************************************** -->
				<field name="SUBSAMPLE" from="7" to="0" access="RW" desc="Subsampling: suppress Valid output during the first SUBSAMPLE analog clock periods. Only allow Valid output in the last of the SUBSAMPLE+1 analog clock periods.&#xA;A value of 0 will not suppress Valid output.">
				</field>
				<field name="SUBSAMPLE_INIT" from="15" to="8" access="RW" desc="Initial value of the subsampling down counter. Before this UAB half is running the firmware can write to this field the initial value of the subsample down counter. It is recommend that the following is true for the initial value  SUBSAMPLE_INIT&lt;=SUBSAMPLE, however this is not a requirement. Writing a bigger value can be used to postpone the very first Valid output.">
				</field>
			</register>
			<register name="SW_STATIC0" address="0x40340230" bitWidth="32" desc="Static switches for half 0 of the UAB">

<!-- **********************UAB0_SW_STATIC0_REG fields ********************** -->
<!-- Static switches for half 0 of the UAB -->
<!-- *********************************************************************** -->
				<field name="SW_G00" from="0" to="0" access="RW" desc="VIN00 to OA0.vplus (AG0)">
				</field>
				<field name="SW_G01" from="1" to="1" access="RW" desc="VIN01 to OA0.vplus (AG0)">
				</field>
				<field name="SW_G02" from="2" to="2" access="RW" desc="VIN02 to OA0.vplus (AG0)">
				</field>
				<field name="SW_G03" from="3" to="3" access="RW" desc="VIN03 to OA0.vplus (AG0)">
				</field>
				<field name="SW_R0G" from="4" to="4" access="RW" desc="REF0 to OA0.vplus (AG0)">
				</field>
				<field name="SW_G0G" from="5" to="5" access="RW" desc="AGND0 to OA0.vplus (AG0)">
				</field>
				<field name="SW_R0T" from="8" to="8" access="RW" desc="REF0 to cmp0.vminus (Threshold)">
				</field>
				<field name="SW_G0T" from="9" to="9" access="RW" desc="AGND0 to cmp0.vminus (Threshold)">
				</field>
				<field name="SW_Q0T" from="10" to="10" access="RW" desc="OUT1 to cmp0.vminus (Threshold)">
				</field>
				<field name="EARLY_P0S" from="12" to="12" access="RW" desc="OUT0 to Sum0 switch timing: 0=Regular, 1=Early">
				</field>
				<field name="EARLY_P0O" from="13" to="13" access="RW" desc="OUT0 to VOUT0 switch timing: 0=Regular, 1=Early">
				</field>
				<field name="RMB0_BITS" from="19" to="16" access="RW" desc="Risk mitigation bits (To be defined if they are used)">
				</field>
				<field name="STRB_RST0_SEL" from="28" to="24" access="RW" desc="Select source either for VDAC strobe or analog-reset to discharge all Caps (Delsig Modulator use-case)&#xA;0 = Decimator0 half 0 analog-reset output&#xA;1 = Decimator0 half 1 analog-reset output&#xA;2 = Decimator1 half 0 analog-reset output&#xA;3 = Decimator1 half 1 analog-reset output&#xA;4 = Decimator2 half 0 analog-reset output&#xA;5 = Decimator2 half 1 analog-reset output&#xA;6 = Decimator3 half 0 analog-reset output&#xA;7 = Decimator3 half 1 analog-reset output&#xA;8-31 = generic trigger input 0-23&#xA;For PASS4B  only values 0-1 and 8-13 are legal.">
				</field>
				<field name="STRB_RST0_EN" from="29" to="29" access="RW" desc="Enable VDAC strobe or UAB analog-reset:&#xA;0: Use selected source as VDAC strobe for next CA0 and CB0 values&#xA;1: Use selected source as Analog-reset (discharge all Caps)">
				</field>
			</register>
			<register name="SW_MODBIT_SRC0" address="0x40340234" bitWidth="32" desc="Select source of Modbit for A,B and C branches of half 0">

<!-- ********************UAB0_SW_MODBIT_SRC0_REG fields ******************** -->
<!-- Select source of Modbit for A,B and C branches of half 0 -->
<!-- *********************************************************************** -->
				<field name="MODBIT0_SRC0_SEL" from="4" to="0" access="RW" desc="Select source of modbit for A &amp; B branches&#xA;0=UAB0 half 0 comparator output&#xA;1=UAB0 half 1 comparator output&#xA;2=UAB1 half 0 comparator output&#xA;3=UAB1 half 1 comparator output&#xA;4=UAB2 half 0 comparator output&#xA;5=UAB2 half 1 comparator output&#xA;6=UAB3 half 0 comparator output&#xA;7=UAB3 half 1 comparator output&#xA;8-30 = generic trigger inputs 0-22&#xA;31=SIGN0_VAL, also used as Firmware modbit. &#xA;For PASS4B  only values 0-1 and 8-13 and 31 are legal.">
				</field>
				<field name="MODBIT1_SRC0_SEL" from="12" to="8" access="RW" desc="Select source of modbit for C branch&#xA;0=UAB0 half 0 comparator output&#xA;1=UAB0 half 1 comparator output&#xA;2=UAB1 half 0 comparator output&#xA;3=UAB1 half 1 comparator output&#xA;4=UAB2 half 0 comparator output&#xA;5=UAB2 half 1 comparator output&#xA;6=UAB3 half 0 comparator output&#xA;7=UAB3 half 1 comparator output&#xA;8-30 = generic trigger inputs 0-22&#xA;31=SIGN0_VAL, also used as Firmware modbit. &#xA;For PASS4B  only values 0-1 and 8-13 and 31 are legal.">
				</field>
			</register>
			<register name="SW_CA0_IN0" address="0x40340240" bitWidth="32" desc="Cap A0 input switches set 0">

<!-- **********************UAB0_SW_CA0_IN0_REG fields ********************** -->
<!-- Cap A0 input switches set 0 -->
<!-- *********************************************************************** -->
				<field name="SW_A00_CMP" from="3" to="0" access="RW" desc="VIN00 to Cap A0 input, allows for modbit control">
				</field>
				<field name="SW_A01_CMP" from="7" to="4" access="RW" desc="VIN01 to Cap A0 input, allows for modbit control">
				</field>
				<field name="SW_A02_CMP" from="11" to="8" access="RW" desc="VIN02 to Cap A0 input, allows for modbit control">
				</field>
				<field name="SW_A03_CMP" from="15" to="12" access="RW" desc="VIN03 to Cap A0 input, allows for modbit control">
				</field>
				<field name="SW_A0P" from="19" to="16" access="RW" desc="OUT0 to Cap A0 input">
				</field>
				<field name="SW_A0Q" from="23" to="20" access="RW" desc="OUT1 to Cap A0 input">
				</field>
			</register>
			<register name="SW_CA0_IN1" address="0x40340244" bitWidth="32" desc="Cap A0 input switches set 1">

<!-- **********************UAB0_SW_CA0_IN1_REG fields ********************** -->
<!-- Cap A0 input switches set 1 -->
<!-- *********************************************************************** -->
				<field name="SW_AA" from="3" to="0" access="RW" desc="Cap A0 input to Cap A1 input&#xA;(Note: In the UAB design this is the called AM switch)">
				</field>
				<field name="SW_A0R_CMP" from="7" to="4" access="RW" desc="REF0 to Cap A0 input, allows for modbit control">
				</field>
				<field name="SW_A0G_CMP" from="11" to="8" access="RW" desc="AGND0 to Cap A0 input, allows for modbit control">
				</field>
				<field name="SW_A0V_CMP" from="15" to="12" access="RW" desc="VSS to Cap A0 input, allows for modbit control">
				</field>
			</register>
			<register name="SW_CA0_TOP" address="0x40340248" bitWidth="32" desc="Cap A0 top plate switches">

<!-- **********************UAB0_SW_CA0_TOP_REG fields ********************** -->
<!-- Cap A0 top plate switches -->
<!-- *********************************************************************** -->
				<field name="SW_R0A_CMP" from="3" to="0" access="RW" desc="Cap A0 top plate to REF0, allows for modbit control">
				</field>
				<field name="SW_G0A_CMP" from="7" to="4" access="RW" desc="Cap A0 top plate to AGND0, allows for modbit control">
				</field>
				<field name="SW_V0A_CMP" from="11" to="8" access="RW" desc="Cap A0 top plate to VSS, allows for modbit control">
				</field>
				<field name="SW_S0A" from="19" to="16" access="RW" desc="Cap A0 top plate to SUM0">
				</field>
			</register>
			<register name="SW_CB0_IN0" address="0x40340250" bitWidth="32" desc="Cap B0 input switches set 0">

<!-- **********************UAB0_SW_CB0_IN0_REG fields ********************** -->
<!-- Cap B0 input switches set 0 -->
<!-- *********************************************************************** -->
				<field name="SW_B00_CMP" from="3" to="0" access="RW" desc="VIN00 to Cap B0 input, allows for modbit control">
				</field>
				<field name="SW_B01_CMP" from="7" to="4" access="RW" desc="VIN01 to Cap B0 input, allows for modbit control">
				</field>
				<field name="SW_B02_CMP" from="11" to="8" access="RW" desc="VIN02 to Cap B0 input, allows for modbit control">
				</field>
				<field name="SW_B03_CMP" from="15" to="12" access="RW" desc="VIN03 to Cap B0 input, allows for modbit control">
				</field>
				<field name="SW_B0P" from="19" to="16" access="RW" desc="OUT0 to Cap B0 input">
				</field>
				<field name="SW_B0Q" from="23" to="20" access="RW" desc="OUT1 to Cap B0 input">
				</field>
			</register>
			<register name="SW_CB0_IN1" address="0x40340254" bitWidth="32" desc="Cap B0 input switches set 1">

<!-- **********************UAB0_SW_CB0_IN1_REG fields ********************** -->
<!-- Cap B0 input switches set 1 -->
<!-- *********************************************************************** -->
				<field name="SW_BB" from="3" to="0" access="RW" desc="Cap B0 input to Cap B1 input&#xA;(Note: In the UAB design this is called the BM switch)">
				</field>
				<field name="SW_B0R_CMP" from="7" to="4" access="RW" desc="REF0 to Cap B0 input, allows for modbit control">
				</field>
				<field name="SW_B0G_CMP" from="11" to="8" access="RW" desc="AGND0 to Cap B0 input, allows for modbit control">
				</field>
				<field name="SW_B0V_CMP" from="15" to="12" access="RW" desc="VSS to Cap B0 input, allows for modbit control">
				</field>
			</register>
			<register name="SW_CB0_TOP" address="0x40340258" bitWidth="32" desc="Cap A0 top plate switches">

<!-- **********************UAB0_SW_CB0_TOP_REG fields ********************** -->
<!-- Cap A0 top plate switches -->
<!-- *********************************************************************** -->
				<field name="SW_R0B_CMP" from="3" to="0" access="RW" desc="Cap B0 top plate to REF0, allows for modbit control">
				</field>
				<field name="SW_G0B_CMP" from="7" to="4" access="RW" desc="Cap B0 top plate to AGND0, allows for modbit control">
				</field>
				<field name="SW_V0B_CMP" from="11" to="8" access="RW" desc="Cap B0 top plate to VSS, allows for modbit control">
				</field>
				<field name="SW_T0B" from="15" to="12" access="RW" desc="Cap B0 top plate Trim/Attenuation bypass">
				</field>
				<field name="SW_S0B" from="19" to="16" access="RW" desc="Cap B0 top plate to SUM0">
				</field>
			</register>
			<register name="SW_CC0_IN0" address="0x40340260" bitWidth="32" desc="Cap C0 input switches set 0">

<!-- **********************UAB0_SW_CC0_IN0_REG fields ********************** -->
<!-- Cap C0 input switches set 0 -->
<!-- *********************************************************************** -->
				<field name="SW_C00_CMP" from="3" to="0" access="RW" desc="VIN00 to Cap C0 input, allows for modbit control">
				</field>
				<field name="SW_C01_CMP" from="7" to="4" access="RW" desc="VIN01 to Cap C0 input, allows for modbit control">
				</field>
				<field name="SW_C02_CMP" from="11" to="8" access="RW" desc="VIN02 to Cap C0 input, allows for modbit control">
				</field>
				<field name="SW_C03_CMP" from="15" to="12" access="RW" desc="VIN03 to Cap C0 input, allows for modbit control">
				</field>
				<field name="SW_C0P" from="19" to="16" access="RW" desc="OUT0 to Cap C0 input">
				</field>
				<field name="SW_C0Q" from="23" to="20" access="RW" desc="OUT1 to Cap C0 input">
				</field>
			</register>
			<register name="SW_CC0_IN1" address="0x40340264" bitWidth="32" desc="Cap C0 input switches set 1">

<!-- **********************UAB0_SW_CC0_IN1_REG fields ********************** -->
<!-- Cap C0 input switches set 1 -->
<!-- *********************************************************************** -->
				<field name="SW_CC" from="3" to="0" access="RW" desc="Cap C0 input to Cap C1 input&#xA;(Note: In the UAB design this is called the CM switch)">
				</field>
				<field name="SW_C0R_CMP" from="7" to="4" access="RW" desc="REF0 to Cap C0 input, allows for modbit control">
				</field>
				<field name="SW_C0G_CMP" from="11" to="8" access="RW" desc="AGND0 to Cap C0 input, allows for modbit control">
				</field>
				<field name="SW_C0V_CMP" from="15" to="12" access="RW" desc="VSS to Cap C0 input, allows for modbit control">
				</field>
			</register>
			<register name="SW_CC0_TOP" address="0x40340268" bitWidth="32" desc="Cap A0 top plate switches">

<!-- **********************UAB0_SW_CC0_TOP_REG fields ********************** -->
<!-- Cap A0 top plate switches -->
<!-- *********************************************************************** -->
				<field name="SW_R0C_CMP" from="3" to="0" access="RW" desc="Cap C0 top plate to REF0, allows for modbit control">
				</field>
				<field name="SW_G0C_CMP" from="7" to="4" access="RW" desc="Cap C0 top plate to AGND0, allows for modbit control">
				</field>
				<field name="SW_V0C_CMP" from="11" to="8" access="RW" desc="Cap C0 top plate to VSS, allows for modbit control">
				</field>
				<field name="SW_T0C" from="15" to="12" access="RW" desc="Cap C0 top plate Trim/Attenuation bypass">
				</field>
				<field name="SW_S0C" from="19" to="16" access="RW" desc="Cap C0 top plate to SUM0">
				</field>
				<field name="SW_S10" from="23" to="20" access="RW" desc="Cap C0 top plate to SUM1">
				</field>
			</register>
			<register name="SW_CF0_BOT" address="0x4034026c" bitWidth="32" desc="Cap F0 bottom plate and output switches">

<!-- **********************UAB0_SW_CF0_BOT_REG fields ********************** -->
<!-- Cap F0 bottom plate and output switches -->
<!-- *********************************************************************** -->
				<field name="SW_G0F" from="3" to="0" access="RW" desc="Cap F0 bottom plate to AGND0">
				</field>
				<field name="SW_P0F" from="7" to="4" access="RW" desc="Cap F0 bottom plate to OUT0">
				</field>
				<field name="SW_P0S" from="11" to="8" access="RW" desc="Cap F bypass, OUT0 to SUM0">
				</field>
				<field name="SW_P0O" from="15" to="12" access="RW" desc="OUT0 to VOUT0">
				</field>
			</register>
			<register name="SW_OTHER0" address="0x40340270" bitWidth="32" desc="Other clocked controls">

<!-- ***********************UAB0_SW_OTHER0_REG fields ********************** -->
<!-- Other clocked controls -->
<!-- *********************************************************************** -->
				<field name="CMP0_FF" from="3" to="0" access="RW" desc="Clock for Flip-Flop after Comparator 0">
				</field>
				<field name="VALID0" from="7" to="4" access="RW" desc="Valid0, output flag to indicated that VOUT0 is valid. The Valid output can be suppressed due to sub-sampling. Note that when sub-sampling is used this clocking waveform is used to decrement the counter (decrement is aligned with the positive edge of this clocking waveform).">
				</field>
				<field name="TRIG0_OUT" from="11" to="8" access="RW" desc="Trigger output (for other UABs or SAR)">
				</field>
				<field name="STROBE_SW0" from="27" to="24" access="RW" desc="Strobe for dsi_sw_ctrl (modbit) update, dsi_sw_ctrl updates in sync with posedge of this wave. To disable set to 0. To enable update anytime use 15.">
				</field>
				<field name="STROBE_RST0" from="31" to="28" access="RW" desc="Use the positive edge of the selected clocking waveform to synchronize: &#xA; STRB_RST0_EN=0: Capacitor Value update (Capacitor Strobe)&#xA; STRB_RST0_EN=1: UAB analog-reset update&#xA;Set to 0 to disable both functions. Result undefined for value 15.">
				</field>
			</register>
			<register name="SW_BOOST_CTRL0" address="0x40340274" bitWidth="32" desc="Bootstrap clock control">

<!-- ********************UAB0_SW_BOOST_CTRL0_REG fields ******************** -->
<!-- Bootstrap clock control -->
<!-- *********************************************************************** -->
				<field name="CA0_BOOST" from="3" to="0" access="RW" desc="Clock for boot strap master in A branch">
				</field>
				<field name="CB0_BOOST" from="7" to="4" access="RW" desc="Clock for boot strap master in B branch">
				</field>
				<field name="CC0_BOOST" from="11" to="8" access="RW" desc="Clock for boot strap master in C branch">
				</field>
				<field name="CF0_BOOST" from="15" to="12" access="RW" desc="Clock for boot strap master in F branch">
				</field>
				<field name="SUM0_BOOST" from="19" to="16" access="RW" desc="Clock for boot strap master in Summing node branch">
				</field>
				<field name="PUMP0_WAVE" from="23" to="20" access="RW" desc="Clock for pump in half0">
				</field>
			</register>
			<register name="SRAM0_CTRL" address="0x40340278" bitWidth="32" desc="SRAM programmed size">

<!-- **********************UAB0_SRAM0_CTRL_REG fields ********************** -->
<!-- SRAM programmed size -->
<!-- *********************************************************************** -->
				<field name="LAST_STEP" from="3" to="0" access="RW" desc="Last step of wave programmed in the SRAM">
				</field>
				<field name="TRIG_SEL0" from="28" to="24" access="RW" desc="input Trigger select&#xA;0=UAB0 half 0 trigger output&#xA;1=UAB0 half 1 trigger output&#xA;2=UAB1 half 0 trigger output&#xA;3=UAB1 half 1 trigger output&#xA;4=UAB2 half 0 trigger output&#xA;5=UAB2 half 1 trigger output&#xA;6=UAB3 half 0 trigger output&#xA;7=UAB3 half 1 trigger output&#xA;8-30 = generic trigger inputs 0-22&#xA;31=SAR trigger output&#xA;For PASS4B  only values 0-1 and 8-13 and 31 are legal.">
				</field>
				<field name="TRIGGER_EN" from="29" to="29" access="RW" desc="Enable input trigger:&#xA;0: Ignore triggers, start running immediately after setting RUN bit&#xA;1: After RUN bit is set wait for a positive edge on the selected trigger input">
				</field>
				<field name="RUN" from="31" to="31" access="RW" desc="Set to start executing the waveform (may need to wait for a trigger). Clear to stop this UAB half. When RUN=0 all dynamic switches are forced open.">
				</field>
			</register>
			<register name="STAT0" address="0x4034027c" bitWidth="32" desc="Status Current SRAM counter and comparator">

<!-- *************************UAB0_STAT0_REG fields ************************ -->
<!-- Status Current SRAM counter and comparator -->
<!-- *********************************************************************** -->
				<field name="CURR_STEP" from="3" to="0" access="R" desc="Current step executed from the SRAM">
				</field>
				<field name="COMP" from="4" to="4" access="R" desc="Current comparator status">
				</field>
				<field name="CURR_SUBSAMPLE" from="31" to="24" access="R" desc="Current value of the subsampling down counter. The Valid is suppressed when SUBSAMPLE_CUR!=0.">
				</field>
			</register>
			<register name="SRAM00" address="0x40340280" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB">

<!-- ************************UAB0_SRAM00_REG fields ************************ -->
<!-- Waveform SRAM for half 0 of the UAB -->
<!-- *********************************************************************** -->
				<field name="WAVE_STEP" from="15" to="0" access="RW" desc="one step of the clocking waveform sequence">
				</field>
			</register>
			<register name="SRAM01" address="0x40340284" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB">

<!-- ************************UAB0_SRAM01_REG fields ************************ -->
<!-- Waveform SRAM for half 0 of the UAB -->
<!-- *********************************************************************** -->
				<field name="WAVE_STEP" from="15" to="0" access="RW" desc="one step of the clocking waveform sequence">
				</field>
			</register>
			<register name="SRAM02" address="0x40340288" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB">

<!-- ************************UAB0_SRAM02_REG fields ************************ -->
<!-- Waveform SRAM for half 0 of the UAB -->
<!-- *********************************************************************** -->
				<field name="WAVE_STEP" from="15" to="0" access="RW" desc="one step of the clocking waveform sequence">
				</field>
			</register>
			<register name="SRAM03" address="0x4034028c" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB">

<!-- ************************UAB0_SRAM03_REG fields ************************ -->
<!-- Waveform SRAM for half 0 of the UAB -->
<!-- *********************************************************************** -->
				<field name="WAVE_STEP" from="15" to="0" access="RW" desc="one step of the clocking waveform sequence">
				</field>
			</register>
			<register name="SRAM04" address="0x40340290" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB">

<!-- ************************UAB0_SRAM04_REG fields ************************ -->
<!-- Waveform SRAM for half 0 of the UAB -->
<!-- *********************************************************************** -->
				<field name="WAVE_STEP" from="15" to="0" access="RW" desc="one step of the clocking waveform sequence">
				</field>
			</register>
			<register name="SRAM05" address="0x40340294" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB">

<!-- ************************UAB0_SRAM05_REG fields ************************ -->
<!-- Waveform SRAM for half 0 of the UAB -->
<!-- *********************************************************************** -->
				<field name="WAVE_STEP" from="15" to="0" access="RW" desc="one step of the clocking waveform sequence">
				</field>
			</register>
			<register name="SRAM06" address="0x40340298" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB">

<!-- ************************UAB0_SRAM06_REG fields ************************ -->
<!-- Waveform SRAM for half 0 of the UAB -->
<!-- *********************************************************************** -->
				<field name="WAVE_STEP" from="15" to="0" access="RW" desc="one step of the clocking waveform sequence">
				</field>
			</register>
			<register name="SRAM07" address="0x4034029c" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB">

<!-- ************************UAB0_SRAM07_REG fields ************************ -->
<!-- Waveform SRAM for half 0 of the UAB -->
<!-- *********************************************************************** -->
				<field name="WAVE_STEP" from="15" to="0" access="RW" desc="one step of the clocking waveform sequence">
				</field>
			</register>
			<register name="SRAM08" address="0x403402a0" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB">

<!-- ************************UAB0_SRAM08_REG fields ************************ -->
<!-- Waveform SRAM for half 0 of the UAB -->
<!-- *********************************************************************** -->
				<field name="WAVE_STEP" from="15" to="0" access="RW" desc="one step of the clocking waveform sequence">
				</field>
			</register>
			<register name="SRAM09" address="0x403402a4" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB">

<!-- ************************UAB0_SRAM09_REG fields ************************ -->
<!-- Waveform SRAM for half 0 of the UAB -->
<!-- *********************************************************************** -->
				<field name="WAVE_STEP" from="15" to="0" access="RW" desc="one step of the clocking waveform sequence">
				</field>
			</register>
			<register name="SRAM010" address="0x403402a8" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB">

<!-- ************************UAB0_SRAM010_REG fields *********************** -->
<!-- Waveform SRAM for half 0 of the UAB -->
<!-- *********************************************************************** -->
				<field name="WAVE_STEP" from="15" to="0" access="RW" desc="one step of the clocking waveform sequence">
				</field>
			</register>
			<register name="SRAM011" address="0x403402ac" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB">

<!-- ************************UAB0_SRAM011_REG fields *********************** -->
<!-- Waveform SRAM for half 0 of the UAB -->
<!-- *********************************************************************** -->
				<field name="WAVE_STEP" from="15" to="0" access="RW" desc="one step of the clocking waveform sequence">
				</field>
			</register>
			<register name="SRAM012" address="0x403402b0" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB">

<!-- ************************UAB0_SRAM012_REG fields *********************** -->
<!-- Waveform SRAM for half 0 of the UAB -->
<!-- *********************************************************************** -->
				<field name="WAVE_STEP" from="15" to="0" access="RW" desc="one step of the clocking waveform sequence">
				</field>
			</register>
			<register name="SRAM013" address="0x403402b4" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB">

<!-- ************************UAB0_SRAM013_REG fields *********************** -->
<!-- Waveform SRAM for half 0 of the UAB -->
<!-- *********************************************************************** -->
				<field name="WAVE_STEP" from="15" to="0" access="RW" desc="one step of the clocking waveform sequence">
				</field>
			</register>
			<register name="SRAM014" address="0x403402b8" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB">

<!-- ************************UAB0_SRAM014_REG fields *********************** -->
<!-- Waveform SRAM for half 0 of the UAB -->
<!-- *********************************************************************** -->
				<field name="WAVE_STEP" from="15" to="0" access="RW" desc="one step of the clocking waveform sequence">
				</field>
			</register>
			<register name="SRAM015" address="0x403402bc" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB">

<!-- ************************UAB0_SRAM015_REG fields *********************** -->
<!-- Waveform SRAM for half 0 of the UAB -->
<!-- *********************************************************************** -->
				<field name="WAVE_STEP" from="15" to="0" access="RW" desc="one step of the clocking waveform sequence">
				</field>
			</register>
			<register name="OA1_CTRL" address="0x40340300" bitWidth="32" desc="Opamp, comparator, buffer  controls">

<!-- ***********************UAB0_OA1_CTRL_REG fields *********************** -->
<!-- Opamp, comparator, buffer  controls -->
<!-- *********************************************************************** -->
				<field name="OA1_PWR" from="2" to="0" access="RW" desc="Opamp1 power level">
				</field>
				<field name="CMP1_PWR" from="10" to="8" access="RW" desc="Comparator1 power level">
				</field>
				<field name="CMP1_EDGE" from="13" to="12" access="RW" desc="Comparator1 edge detect for interrupt and trigger">

<!-- CMP1_EDGE bitfield enumerated values -->
					<value name="DISABLE" value="0" desc="Disabled, no interrupts will be detected"/>
					<value name="RISING" value="1" desc="Rising edge"/>
					<value name="FALLING" value="10" desc="Falling edge"/>
					<value name="BOTH" value="11" desc="Both rising and falling edges"/>
				</field>
				<field name="CMP1_DSI_LEVEL" from="14" to="14" access="RW" desc="Comparator trigger out level : 0=pulse, 1=level">
				</field>
				<field name="CTRL1_SPARE" from="15" to="15" access="RW" desc="Spare bit">
				</field>
				<field name="REF1_PWR" from="18" to="16" access="RW" desc="Reference1 buffer power">
				</field>
				<field name="REF1_PTS" from="19" to="19" access="RW" desc="1- Pull the Reference1 buffer output to VDDA">
				</field>
				<field name="AGND1_PWR" from="22" to="20" access="RW" desc="Agnd1 buffer power">
				</field>
				<field name="AGND1_PTS" from="23" to="23" access="RW" desc="1- Pull the Agnd1 buffer output to VDDA">
				</field>
				<field name="SW_RR" from="24" to="24" access="RW" desc="Connect outputs of Reference0 and Reference1 buffer, one buffer must be off.&#xA;This is to drive both UAB halves with the same buffer, so both halves get the same offset noise.">
				</field>
				<field name="SPARE1_EN" from="25" to="25" access="RW" desc="1 - Enable the spare reference">
				</field>
				<field name="H1_PWR" from="31" to="30" access="RW" desc="UAB Half, power profile">

<!-- H1_PWR bitfield enumerated values -->
					<value name="NORMAL" value="0" desc="Normal, for normal analog clock speeds"/>
					<value name="ULTRA_LOW" value="1" desc="Ultra low power, only allowed for lower analog clock speeds"/>
					<value name="ULTRA_HIGH" value="10" desc="Ultra high performance, for higher analog clock speeds (also ultra high power)"/>
					<value name="Reserved" value="11" desc="Reserved, do not use"/>
				</field>
			</register>
			<register name="CAP_CTRL1" address="0x40340304" bitWidth="32" desc="Capacitance controls">

<!-- ***********************UAB0_CAP_CTRL1_REG fields ********************** -->
<!-- Capacitance controls -->
<!-- *********************************************************************** -->
				<field name="CB1_GND" from="5" to="5" access="RW" desc="Ground unused caps of CB1 array&#xA;0: leave unused caps floating&#xA;1: ground unused caps (typical when attentuation Cap is used, e.g. for VDAC use-case)">
				</field>
				<field name="CC1_GND" from="6" to="6" access="RW" desc="Ground unused caps of CC1 array&#xA;0: leave unused caps floating&#xA;1: ground unused caps (typical when attentuation Cap is used)">
				</field>
				<field name="FRC1_SIGN_BIT" from="28" to="28" access="RW" desc="Forces the sign bit to be 1 in DAC mode.  This is used to achieve &#xA;0 - AGND1 range for unsigned numbers using DAC mode 2">
				</field>
				<field name="DAC1_MODE_EN" from="29" to="29" access="RW" desc="1: SIGN1_VAL is dedicated sign bit (FW modbit source tied to 0)                                                           0: SIGN1_VAL can be programmed to be a modbit source">
				</field>
				<field name="DAC1_MODE" from="31" to="30" access="RW" desc="DAC mode, this determines the AB Cap Value decoding">

<!-- DAC1_MODE bitfield enumerated values -->
					<value name="UNSIGNED12" value="0" desc="Off or Unsigned 12-bit VDAC, i.e. no AB Cap value decoding.&#xA;SIGN1_VAL can be used as Firmware controlled modbit (e.g. to invert the Voltage for a Sign + Magnitude VDAC)"/>
					<value name="VIRT_SIGNED12" value="1" desc="Virtual signed 12-bits' VDAC. AB Cap value decoding: &#xA;add 0x800 to the 12-bit AB Cap Value (=invert MSB), to convert the lowest signed number 0x800 to the lowest unsigned number 0x000. This is the same as the SAR handles 12-bit 'virtual' signed numbers."/>
					<value name="SIGNED13" value="10" desc="Signed 13-bit twos complement. AB Cap value decoding: &#xA;for negative values (SIGN1_VAL=1) the AB Cap values are inverted, the 64th B cap unit is enabled and the Voltage should be inverted.&#xA;- Voltage inversion only works if the right clocking waveforms, switch settings and reference voltages are used.&#xA;- Enabling the 64th B cap unit adds 1 so that only a AB Cap value inversion is needed to create a true twos complement.  ."/>
					<value name="RESERVED" value="11" desc=""/>
				</field>
			</register>
			<register name="CAP_ABCF1_VAL" address="0x40340308" bitWidth="32" desc="Capacitance values for CA1, CB1, CC1 and CF1">

<!-- *********************UAB0_CAP_ABCF1_VAL_REG fields ******************** -->
<!-- Capacitance values for CA1, CB1, CC1 and CF1 -->
<!-- *********************************************************************** -->
				<field name="CB1_VAL" from="5" to="0" access="RW" desc="Cap B1 Value, in DAC_MODE 1 and 2 this value is decoded">
				</field>
				<field name="CA1_VAL" from="11" to="6" access="RW" desc="Cap A1 Value, in DAC_MODE 1 and 2 this value is decoded">
				</field>
				<field name="SIGN1_VAL" from="12" to="12" access="RW" desc="Sign bit Value, when used in DAC_MODE, otherwise Firmware modbit.&#xA;In DAC_MODE the modbit should be used to invert the voltage on the AB Caps for the negative DAC values.">
				</field>
				<field name="CB1_64" from="13" to="13" access="RW" desc="Enable 64th Cap of CB1 array. In DAC mode the FW setting is overridden by the hardware based on DAC_MODE setting.                                                           1 - Enables the 64th cap. This will also set CB1_val[5:0] to be 6'h3F">
				</field>
				<field name="CC1_VAL" from="21" to="16" access="RW" desc="Cap C1 Value">
				</field>
				<field name="CF1_VAL" from="28" to="24" access="RW" desc="Cap F1 Value">
				</field>
			</register>
			<register name="CAP_AB1_VAL_NXT" address="0x4034030c" bitWidth="32" desc="Next capacitance values for CA1 and CB1">

<!-- ********************UAB0_CAP_AB1_VAL_NXT_REG fields ******************* -->
<!-- Next capacitance values for CA1 and CB1 -->
<!-- *********************************************************************** -->
				<field name="CB1_VAL" from="5" to="0" access="RW" desc="Cap B1 Value">
				</field>
				<field name="CA1_VAL" from="11" to="6" access="RW" desc="Cap A1 Value">
				</field>
				<field name="SIGN1_VAL" from="12" to="12" access="RW" desc="Sign bit Value">
				</field>
			</register>
			<register name="CAP_CF1_VAL_NXT" address="0x40340310" bitWidth="32" desc="Next capacitance values for CC1 and CF1">

<!-- ********************UAB0_CAP_CF1_VAL_NXT_REG fields ******************* -->
<!-- Next capacitance values for CC1 and CF1 -->
<!-- *********************************************************************** -->
				<field name="CC1_VAL" from="21" to="16" access="RW" desc="Cap C1 Value">
				</field>
				<field name="CF1_VAL" from="28" to="24" access="RW" desc="Cap F1 Value">
				</field>
				<field name="CC1_VAL_UPDATE" from="30" to="30" access="RW" desc="1 - Update the CC1 cap value with CAP_CC1_VAL_NXT.CC1_VAL">
				</field>
				<field name="CF1_VAL_UPDATE" from="31" to="31" access="RW" desc="1 - Update the CF1 cap value with CAP_CF1_VAL_NXT.CF1_VAL">
				</field>
			</register>
			<register name="STARTUP_DELAY1" address="0x40340320" bitWidth="32" desc="Startup delay">

<!-- ********************UAB0_STARTUP_DELAY1_REG fields ******************** -->
<!-- Startup delay -->
<!-- *********************************************************************** -->
				<field name="STARTUP_DELAY" from="15" to="0" access="RW" desc="Startup delay to synchronize the UAB-SAR interface. The usage and meaning of this field depends on the value of the ALIGN_MODE bit (below).   A value of 0 disables this function.">
				</field>
				<field name="ALIGN_MODE" from="16" to="16" access="RW" desc="0 - STARTUP_DELAY is number of clk_hf clocks to delay the UAB clock after a SAR Trigger for UAB-SAR alignment in scheduled mode&#xA;1 - STARTUP_DELAY is number of clk_hf clocks to delay UAB trigger to SAR for UAB-SAR alignment in unscheduled mode">
				</field>
			</register>
			<register name="SUBSAMPLE_CTRL1" address="0x40340324" bitWidth="32" desc="Subsample control">

<!-- ********************UAB0_SUBSAMPLE_CTRL1_REG fields ******************* -->
<!-- Subsample control -->
<!-- *********************************************************************** -->
				<field name="SUBSAMPLE" from="7" to="0" access="RW" desc="Subsampling: suppress Valid output during the first SUBSAMPLE analog clock periods. Only allow Valid output in the last of the SUBSAMPLE+1 analog clock periods.&#xA;A value of 0 will not suppress Valid output.">
				</field>
				<field name="SUBSAMPLE_INIT" from="15" to="8" access="RW" desc="Initial value of the subsampling down counter. Before this UAB half is running the firmware can write to this field the initial value of the subsample down counter. It is recommend that the following is true for the initial value  SUBSAMPLE_INIT&lt;=SUBSAMPLE, however this is not a requirement. Writing a bigger value can be used to postpone the very first Valid output.">
				</field>
			</register>
			<register name="SW_STATIC1" address="0x40340330" bitWidth="32" desc="Static switches for half 1 of the UAB">

<!-- **********************UAB0_SW_STATIC1_REG fields ********************** -->
<!-- Static switches for half 1 of the UAB -->
<!-- *********************************************************************** -->
				<field name="SW_G10" from="0" to="0" access="RW" desc="VIN10 to OA1.vplus (AG1)">
				</field>
				<field name="SW_G11" from="1" to="1" access="RW" desc="VIN11 to OA1.vplus (AG1)">
				</field>
				<field name="SW_G12" from="2" to="2" access="RW" desc="VIN12 to OA1.vplus (AG1)">
				</field>
				<field name="SW_G13" from="3" to="3" access="RW" desc="VIN13 to OA1.vplus (AG1)">
				</field>
				<field name="SW_R1G" from="4" to="4" access="RW" desc="REF1 to OA1.vplus (AG1)">
				</field>
				<field name="SW_G1G" from="5" to="5" access="RW" desc="AGND1 to OA1.vplus (AG1)">
				</field>
				<field name="SW_R1T" from="8" to="8" access="RW" desc="REF1 to cmp1.vminus (Threshold)">
				</field>
				<field name="SW_G1T" from="9" to="9" access="RW" desc="AGND1 to cmp1.vminus (Threshold)">
				</field>
				<field name="SW_P1T" from="10" to="10" access="RW" desc="OUT0 to cmp1.vminus (Threshold)">
				</field>
				<field name="EARLY_Q1S" from="12" to="12" access="RW" desc="OUT1 to Sum1 switch timing: 0=Regular, 1=Early">
				</field>
				<field name="EARLY_Q1O" from="13" to="13" access="RW" desc="OUT1 to VOUT1 switch timing: 0=Regular, 1=Early">
				</field>
				<field name="RMB1_BITS" from="19" to="16" access="RW" desc="Risk mitigation bits (To be defined if they are used)">
				</field>
				<field name="STRB_RST1_SEL" from="28" to="24" access="RW" desc="Select source either for VDAC strobe or analog-reset to discharge all Caps (Delsig Modulator use-case)&#xA;0 = Decimator0 half 0 analog-reset output&#xA;1 = Decimator0 half 1 analog-reset output&#xA;2 = Decimator1 half 0 analog-reset output&#xA;3 = Decimator1 half 1 analog-reset output&#xA;4 = Decimator2 half 0 analog-reset output&#xA;5 = Decimator2 half 1 analog-reset output&#xA;6 = Decimator3 half 0 analog-reset output&#xA;7 = Decimator3 half 1 analog-reset output&#xA;8-31 = generic trigger input 0-23&#xA;For PASS4B  only values 0-1 and 8-13 are legal.">
				</field>
				<field name="STRB_RST1_EN" from="29" to="29" access="RW" desc="Enable VDAC strobe or UAB analog-reset:&#xA;0: Use selected source as VDAC strobe for next CA1 and CB1 values&#xA;1: Use selected source as Analog-reset (discharge all Caps)">
				</field>
			</register>
			<register name="SW_MODBIT_SRC1" address="0x40340334" bitWidth="32" desc="Select source of Modbit for A,B and C branches of half 1">

<!-- ********************UAB0_SW_MODBIT_SRC1_REG fields ******************** -->
<!-- Select source of Modbit for A,B and C branches of half 1 -->
<!-- *********************************************************************** -->
				<field name="MODBIT0_SRC1_SEL" from="4" to="0" access="RW" desc="Select source of modbit for A &amp; B branches&#xA;0=UAB0 half 0 comparator output&#xA;1=UAB0 half 1 comparator output&#xA;2=UAB1 half 0 comparator output&#xA;3=UAB1 half 1 comparator output&#xA;4=UAB2 half 0 comparator output&#xA;5=UAB2 half 1 comparator output&#xA;6=UAB3 half 0 comparator output&#xA;7=UAB3 half 1 comparator output&#xA;8-30 = generic trigger inputs 0-22&#xA;31=SIGN1_VAL, also used as Firmware modbit.&#xA;For PASS4B  only values 0-1 and 8-13 and 31 are legal.">
				</field>
				<field name="MODBIT1_SRC1_SEL" from="12" to="8" access="RW" desc="Select source of modbit for C branch&#xA;0=UAB0 half 0 comparator output&#xA;1=UAB0 half 1 comparator output&#xA;2=UAB1 half 0 comparator output&#xA;3=UAB1 half 1 comparator output&#xA;4=UAB2 half 0 comparator output&#xA;5=UAB2 half 1 comparator output&#xA;6=UAB3 half 0 comparator output&#xA;7=UAB3 half 1 comparator output&#xA;8-30 = generic trigger inputs 0-22&#xA;31=SIGN1_VAL, also used as Firmware modbit.&#xA;For PASS4B  only values 0-1 and 8-11 and 31 are legal.">
				</field>
			</register>
			<register name="SW_CA1_IN0" address="0x40340340" bitWidth="32" desc="Cap A1 input switches set 0">

<!-- **********************UAB0_SW_CA1_IN0_REG fields ********************** -->
<!-- Cap A1 input switches set 0 -->
<!-- *********************************************************************** -->
				<field name="SW_A10_CMP" from="3" to="0" access="RW" desc="VIN10 to Cap A1 input, allows for modbit control">
				</field>
				<field name="SW_A11_CMP" from="7" to="4" access="RW" desc="VIN11 to Cap A1 input, allows for modbit control">
				</field>
				<field name="SW_A12_CMP" from="11" to="8" access="RW" desc="VIN12 to Cap A1 input, allows for modbit control">
				</field>
				<field name="SW_A13_CMP" from="15" to="12" access="RW" desc="VIN13 to Cap A1 input, allows for modbit control">
				</field>
				<field name="SW_A1P" from="19" to="16" access="RW" desc="OUT1 to Cap A1 input">
				</field>
				<field name="SW_A1Q" from="23" to="20" access="RW" desc="OUT0 to Cap A1 input">
				</field>
			</register>
			<register name="SW_CA1_IN1" address="0x40340344" bitWidth="32" desc="Cap A1 input switches set 1">

<!-- **********************UAB0_SW_CA1_IN1_REG fields ********************** -->
<!-- Cap A1 input switches set 1 -->
<!-- *********************************************************************** -->
				<field name="SW_A1R_CMP" from="7" to="4" access="RW" desc="REF1 to Cap A1 input, allows for modbit control">
				</field>
				<field name="SW_A1G_CMP" from="11" to="8" access="RW" desc="AGND1 to Cap A1 input, allows for modbit control">
				</field>
				<field name="SW_A1V_CMP" from="15" to="12" access="RW" desc="VSS to Cap A1 input, allows for modbit control">
				</field>
			</register>
			<register name="SW_CA1_TOP" address="0x40340348" bitWidth="32" desc="Cap A1 top plate switches">

<!-- **********************UAB0_SW_CA1_TOP_REG fields ********************** -->
<!-- Cap A1 top plate switches -->
<!-- *********************************************************************** -->
				<field name="SW_R1A_CMP" from="3" to="0" access="RW" desc="Cap A1 top plate to REF1, allows for modbit control">
				</field>
				<field name="SW_G1A_CMP" from="7" to="4" access="RW" desc="Cap A1 top plate to AGND1, allows for modbit control">
				</field>
				<field name="SW_V1A_CMP" from="11" to="8" access="RW" desc="Cap A1 top plate to VSS, allows for modbit control">
				</field>
				<field name="SW_S1A" from="19" to="16" access="RW" desc="Cap A1 top plate to SUM1">
				</field>
			</register>
			<register name="SW_CB1_IN0" address="0x40340350" bitWidth="32" desc="Cap B1 input switches set 0">

<!-- **********************UAB0_SW_CB1_IN0_REG fields ********************** -->
<!-- Cap B1 input switches set 0 -->
<!-- *********************************************************************** -->
				<field name="SW_B10_CMP" from="3" to="0" access="RW" desc="VIN10 to Cap B1 input, allows for modbit control">
				</field>
				<field name="SW_B11_CMP" from="7" to="4" access="RW" desc="VIN11 to Cap B1 input, allows for modbit control">
				</field>
				<field name="SW_B12_CMP" from="11" to="8" access="RW" desc="VIN12 to Cap B1 input, allows for modbit control">
				</field>
				<field name="SW_B13_CMP" from="15" to="12" access="RW" desc="VIN13 to Cap B1 input, allows for modbit control">
				</field>
				<field name="SW_B1P" from="19" to="16" access="RW" desc="OUT1 to Cap B1 input">
				</field>
				<field name="SW_B1Q" from="23" to="20" access="RW" desc="OUT0 to Cap B1 input">
				</field>
			</register>
			<register name="SW_CB1_IN1" address="0x40340354" bitWidth="32" desc="Cap B1 input switches set 1">

<!-- **********************UAB0_SW_CB1_IN1_REG fields ********************** -->
<!-- Cap B1 input switches set 1 -->
<!-- *********************************************************************** -->
				<field name="SW_B1R_CMP" from="7" to="4" access="RW" desc="REF1 to Cap B1 input, allows for modbit control">
				</field>
				<field name="SW_B1G_CMP" from="11" to="8" access="RW" desc="AGND1 to Cap B1 input, allows for modbit control">
				</field>
				<field name="SW_B1V_CMP" from="15" to="12" access="RW" desc="VSS to Cap B1 input, allows for modbit control">
				</field>
			</register>
			<register name="SW_CB1_TOP" address="0x40340358" bitWidth="32" desc="Cap A1 top plate switches">

<!-- **********************UAB0_SW_CB1_TOP_REG fields ********************** -->
<!-- Cap A1 top plate switches -->
<!-- *********************************************************************** -->
				<field name="SW_R1B_CMP" from="3" to="0" access="RW" desc="Cap B1 top plate to REF1, allows for modbit control">
				</field>
				<field name="SW_G1B_CMP" from="7" to="4" access="RW" desc="Cap B1 top plate to AGND1, allows for modbit control">
				</field>
				<field name="SW_V1B_CMP" from="11" to="8" access="RW" desc="Cap B1 top plate to VSS, allows for modbit control">
				</field>
				<field name="SW_T1B" from="15" to="12" access="RW" desc="Cap B1 top plate Trim/Attenuation bypass">
				</field>
				<field name="SW_S1B" from="19" to="16" access="RW" desc="Cap B1 top plate to SUM1">
				</field>
			</register>
			<register name="SW_CC1_IN0" address="0x40340360" bitWidth="32" desc="Cap C1 input switches set 0">

<!-- **********************UAB0_SW_CC1_IN0_REG fields ********************** -->
<!-- Cap C1 input switches set 0 -->
<!-- *********************************************************************** -->
				<field name="SW_C10_CMP" from="3" to="0" access="RW" desc="VIN10 to Cap C1 input, allows for modbit control">
				</field>
				<field name="SW_C11_CMP" from="7" to="4" access="RW" desc="VIN11 to Cap C1 input, allows for modbit control">
				</field>
				<field name="SW_C12_CMP" from="11" to="8" access="RW" desc="VIN12 to Cap C1 input, allows for modbit control">
				</field>
				<field name="SW_C13_CMP" from="15" to="12" access="RW" desc="VIN13 to Cap C1 input, allows for modbit control">
				</field>
				<field name="SW_C1P" from="19" to="16" access="RW" desc="OUT1 to Cap C1 input">
				</field>
				<field name="SW_C1Q" from="23" to="20" access="RW" desc="OUT0 to Cap C1 input">
				</field>
			</register>
			<register name="SW_CC1_IN1" address="0x40340364" bitWidth="32" desc="Cap C1 input switches set 1">

<!-- **********************UAB0_SW_CC1_IN1_REG fields ********************** -->
<!-- Cap C1 input switches set 1 -->
<!-- *********************************************************************** -->
				<field name="SW_C1R_CMP" from="7" to="4" access="RW" desc="REF1 to Cap C1 input, allows for modbit control">
				</field>
				<field name="SW_C1G_CMP" from="11" to="8" access="RW" desc="AGND1 to Cap C1 input, allows for modbit control">
				</field>
				<field name="SW_C1V_CMP" from="15" to="12" access="RW" desc="VSS to Cap C1 input, allows for modbit control">
				</field>
			</register>
			<register name="SW_CC1_TOP" address="0x40340368" bitWidth="32" desc="Cap A1 top plate switches">

<!-- **********************UAB0_SW_CC1_TOP_REG fields ********************** -->
<!-- Cap A1 top plate switches -->
<!-- *********************************************************************** -->
				<field name="SW_R1C_CMP" from="3" to="0" access="RW" desc="Cap C1 top plate to REF1, allows for modbit control">
				</field>
				<field name="SW_G1C_CMP" from="7" to="4" access="RW" desc="Cap C1 top plate to AGND1, allows for modbit control">
				</field>
				<field name="SW_V1C_CMP" from="11" to="8" access="RW" desc="Cap C1 top plate to VSS, allows for modbit control">
				</field>
				<field name="SW_T1C" from="15" to="12" access="RW" desc="Cap C1 top plate Trim/Attenuation bypass">
				</field>
				<field name="SW_S1C" from="19" to="16" access="RW" desc="Cap C1 top plate to SUM1">
				</field>
				<field name="SW_S01" from="23" to="20" access="RW" desc="Cap C1 top plate to SUM0">
				</field>
			</register>
			<register name="SW_CF1_BOT" address="0x4034036c" bitWidth="32" desc="Cap F1 bottom plate and output switches">

<!-- **********************UAB0_SW_CF1_BOT_REG fields ********************** -->
<!-- Cap F1 bottom plate and output switches -->
<!-- *********************************************************************** -->
				<field name="SW_G1F" from="3" to="0" access="RW" desc="Cap F1 bottom plate to AGND1">
				</field>
				<field name="SW_Q1F" from="7" to="4" access="RW" desc="Cap F1 bottom plate to OUT1">
				</field>
				<field name="SW_Q1S" from="11" to="8" access="RW" desc="Cap F bypass, OUT1 to SUM1">
				</field>
				<field name="SW_Q1O" from="15" to="12" access="RW" desc="OUT1 to VOUT1">
				</field>
			</register>
			<register name="SW_OTHER1" address="0x40340370" bitWidth="32" desc="Other clocked controls">

<!-- ***********************UAB0_SW_OTHER1_REG fields ********************** -->
<!-- Other clocked controls -->
<!-- *********************************************************************** -->
				<field name="CMP1_FF" from="3" to="0" access="RW" desc="Clock for Flip-Flop after Comparator 1">
				</field>
				<field name="VALID1" from="7" to="4" access="RW" desc="Valid1, output flag to indicated that VOUT1 is valid. The Valid output can be suppressed due to sub-sampling. Note that when sub-sampling is used this clocking waveform is used to decrement the counter (decrement is aligned with the positive edge of this clocking waveform).">
				</field>
				<field name="TRIG1_OUT" from="11" to="8" access="RW" desc="Trigger output (for other UABs or SAR)">
				</field>
				<field name="STROBE_SW1" from="27" to="24" access="RW" desc="Strobe for dsi_sw_ctrl (modbit) update, dsi_sw_ctrl updates in sync with posedge of this wave. To disable set to 0. To enable update anytime use 15.">
				</field>
				<field name="STROBE_RST1" from="31" to="28" access="RW" desc="Use the positive edge of the selected clocking waveform to synchronize: &#xA; STRB_RST0_EN=0: Capacitor Value update (Capacitor Strobe)&#xA; STRB_RST0_EN=1: UAB analog-reset update&#xA;Set to 0 to disable both functions. Result undefined for value 15.">
				</field>
			</register>
			<register name="SW_BOOST_CTRL1" address="0x40340374" bitWidth="32" desc="Bootstrap clock control">

<!-- ********************UAB0_SW_BOOST_CTRL1_REG fields ******************** -->
<!-- Bootstrap clock control -->
<!-- *********************************************************************** -->
				<field name="CA1_BOOST" from="3" to="0" access="RW" desc="Clock for boot strap master in A branch">
				</field>
				<field name="CB1_BOOST" from="7" to="4" access="RW" desc="Clock for boot strap master in B branch">
				</field>
				<field name="CC1_BOOST" from="11" to="8" access="RW" desc="Clock for boot strap master in C branch">
				</field>
				<field name="CF1_BOOST" from="15" to="12" access="RW" desc="Clock for boot strap master in F branch">
				</field>
				<field name="SUM1_BOOST" from="19" to="16" access="RW" desc="Clock for boot strap master in Summing node branch">
				</field>
				<field name="PUMP1_WAVE" from="23" to="20" access="RW" desc="Clock for pump in half1">
				</field>
			</register>
			<register name="SRAM1_CTRL" address="0x40340378" bitWidth="32" desc="SRAM programmed size">

<!-- **********************UAB0_SRAM1_CTRL_REG fields ********************** -->
<!-- SRAM programmed size -->
<!-- *********************************************************************** -->
				<field name="LAST_STEP" from="3" to="0" access="RW" desc="Last step of wave programmed in the SRAM">
				</field>
				<field name="TRIG_SEL1" from="28" to="24" access="RW" desc="Trigger select&#xA;0=UAB0 half 0 trigger output&#xA;1=UAB0 half 1 trigger output&#xA;2=UAB1 half 0 trigger output&#xA;3=UAB1 half 1 trigger output&#xA;4=UAB2 half 0 trigger output&#xA;5=UAB2 half 1 trigger output&#xA;6=UAB3 half 0 trigger output&#xA;7=UAB3 half 1 trigger output&#xA;8-30 = generic trigger inputs 0-22&#xA;31=SAR trigger output&#xA;For PASS4B  only values 0-1 and 8-13 and 31 are legal.">
				</field>
				<field name="TRIGGER_EN" from="29" to="29" access="RW" desc="Enable input trigger:&#xA;0: Ignore triggers, start running immediately after setting RUN bit&#xA;1: After RUN bit is set wait for a positive edge on the selected trigger input">
				</field>
				<field name="RUN" from="31" to="31" access="RW" desc="Set to start executing the waveform (may need to wait for a trigger). Clear to stop this UAB half. When RUN=0 all dynamic switches are forced open.">
				</field>
			</register>
			<register name="STAT1" address="0x4034037c" bitWidth="32" desc="Status Current SRAM counter and comparator">

<!-- *************************UAB0_STAT1_REG fields ************************ -->
<!-- Status Current SRAM counter and comparator -->
<!-- *********************************************************************** -->
				<field name="CURR_STEP" from="3" to="0" access="R" desc="Current step executed from the SRAM">
				</field>
				<field name="COMP" from="4" to="4" access="R" desc="Current comparator status">
				</field>
				<field name="CURR_SUBSAMPLE" from="31" to="24" access="R" desc="Current value of the subsampling down counter. The Valid is suppressed when SUBSAMPLE_CUR!=0.">
				</field>
			</register>
			<register name="SRAM10" address="0x40340380" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB">

<!-- ************************UAB0_SRAM10_REG fields ************************ -->
<!-- Waveform SRAM for half 1 of the UAB -->
<!-- *********************************************************************** -->
				<field name="WAVE_STEP" from="15" to="0" access="RW" desc="one step of the clocking waveform sequence">
				</field>
			</register>
			<register name="SRAM11" address="0x40340384" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB">

<!-- ************************UAB0_SRAM11_REG fields ************************ -->
<!-- Waveform SRAM for half 1 of the UAB -->
<!-- *********************************************************************** -->
				<field name="WAVE_STEP" from="15" to="0" access="RW" desc="one step of the clocking waveform sequence">
				</field>
			</register>
			<register name="SRAM12" address="0x40340388" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB">

<!-- ************************UAB0_SRAM12_REG fields ************************ -->
<!-- Waveform SRAM for half 1 of the UAB -->
<!-- *********************************************************************** -->
				<field name="WAVE_STEP" from="15" to="0" access="RW" desc="one step of the clocking waveform sequence">
				</field>
			</register>
			<register name="SRAM13" address="0x4034038c" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB">

<!-- ************************UAB0_SRAM13_REG fields ************************ -->
<!-- Waveform SRAM for half 1 of the UAB -->
<!-- *********************************************************************** -->
				<field name="WAVE_STEP" from="15" to="0" access="RW" desc="one step of the clocking waveform sequence">
				</field>
			</register>
			<register name="SRAM14" address="0x40340390" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB">

<!-- ************************UAB0_SRAM14_REG fields ************************ -->
<!-- Waveform SRAM for half 1 of the UAB -->
<!-- *********************************************************************** -->
				<field name="WAVE_STEP" from="15" to="0" access="RW" desc="one step of the clocking waveform sequence">
				</field>
			</register>
			<register name="SRAM15" address="0x40340394" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB">

<!-- ************************UAB0_SRAM15_REG fields ************************ -->
<!-- Waveform SRAM for half 1 of the UAB -->
<!-- *********************************************************************** -->
				<field name="WAVE_STEP" from="15" to="0" access="RW" desc="one step of the clocking waveform sequence">
				</field>
			</register>
			<register name="SRAM16" address="0x40340398" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB">

<!-- ************************UAB0_SRAM16_REG fields ************************ -->
<!-- Waveform SRAM for half 1 of the UAB -->
<!-- *********************************************************************** -->
				<field name="WAVE_STEP" from="15" to="0" access="RW" desc="one step of the clocking waveform sequence">
				</field>
			</register>
			<register name="SRAM17" address="0x4034039c" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB">

<!-- ************************UAB0_SRAM17_REG fields ************************ -->
<!-- Waveform SRAM for half 1 of the UAB -->
<!-- *********************************************************************** -->
				<field name="WAVE_STEP" from="15" to="0" access="RW" desc="one step of the clocking waveform sequence">
				</field>
			</register>
			<register name="SRAM18" address="0x403403a0" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB">

<!-- ************************UAB0_SRAM18_REG fields ************************ -->
<!-- Waveform SRAM for half 1 of the UAB -->
<!-- *********************************************************************** -->
				<field name="WAVE_STEP" from="15" to="0" access="RW" desc="one step of the clocking waveform sequence">
				</field>
			</register>
			<register name="SRAM19" address="0x403403a4" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB">

<!-- ************************UAB0_SRAM19_REG fields ************************ -->
<!-- Waveform SRAM for half 1 of the UAB -->
<!-- *********************************************************************** -->
				<field name="WAVE_STEP" from="15" to="0" access="RW" desc="one step of the clocking waveform sequence">
				</field>
			</register>
			<register name="SRAM110" address="0x403403a8" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB">

<!-- ************************UAB0_SRAM110_REG fields *********************** -->
<!-- Waveform SRAM for half 1 of the UAB -->
<!-- *********************************************************************** -->
				<field name="WAVE_STEP" from="15" to="0" access="RW" desc="one step of the clocking waveform sequence">
				</field>
			</register>
			<register name="SRAM111" address="0x403403ac" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB">

<!-- ************************UAB0_SRAM111_REG fields *********************** -->
<!-- Waveform SRAM for half 1 of the UAB -->
<!-- *********************************************************************** -->
				<field name="WAVE_STEP" from="15" to="0" access="RW" desc="one step of the clocking waveform sequence">
				</field>
			</register>
			<register name="SRAM112" address="0x403403b0" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB">

<!-- ************************UAB0_SRAM112_REG fields *********************** -->
<!-- Waveform SRAM for half 1 of the UAB -->
<!-- *********************************************************************** -->
				<field name="WAVE_STEP" from="15" to="0" access="RW" desc="one step of the clocking waveform sequence">
				</field>
			</register>
			<register name="SRAM113" address="0x403403b4" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB">

<!-- ************************UAB0_SRAM113_REG fields *********************** -->
<!-- Waveform SRAM for half 1 of the UAB -->
<!-- *********************************************************************** -->
				<field name="WAVE_STEP" from="15" to="0" access="RW" desc="one step of the clocking waveform sequence">
				</field>
			</register>
			<register name="SRAM114" address="0x403403b8" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB">

<!-- ************************UAB0_SRAM114_REG fields *********************** -->
<!-- Waveform SRAM for half 1 of the UAB -->
<!-- *********************************************************************** -->
				<field name="WAVE_STEP" from="15" to="0" access="RW" desc="one step of the clocking waveform sequence">
				</field>
			</register>
			<register name="SRAM115" address="0x403403bc" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB">

<!-- ************************UAB0_SRAM115_REG fields *********************** -->
<!-- Waveform SRAM for half 1 of the UAB -->
<!-- *********************************************************************** -->
				<field name="WAVE_STEP" from="15" to="0" access="RW" desc="one step of the clocking waveform sequence">
				</field>
			</register>
			<register name="DECM_CTRL" address="0x40340400" bitWidth="32" desc="Global decimator control">

<!-- ***********************UAB0_DECM_CTRL_REG fields ********************** -->
<!-- Global decimator control -->
<!-- *********************************************************************** -->
				<field name="ENABLED" from="31" to="31" access="RW" desc="- 0: Decimator disabled (independent of UAB)&#xA;- 1: Decimator enabled (independent of UAB)">
				</field>
			</register>
			<register name="DC0_CTRL" address="0x40340404" bitWidth="32" desc="decimator0 control">

<!-- ***********************UAB0_DC0_CTRL_REG fields *********************** -->
<!-- decimator0 control -->
<!-- *********************************************************************** -->
				<field name="DC0_START" from="0" to="0" access="RW" desc="Start decimator, in incremental mode, this bit is cleared by HW when done. If DSI trigger enable is set then only start after a DSI trigger.">
				</field>
				<field name="DC0_MODE" from="1" to="1" access="RW" desc="Operation mode&#xA;0: Incremental (one-shot) operation&#xA;1: Continuous operation">
				</field>
				<field name="DC0_SEL" from="5" to="4" access="RW" desc="Source select">

<!-- DC0_SEL bitfield enumerated values -->
					<value name="UAB_H0" value="0" desc="Comparator output from Half0 of this UAB"/>
					<value name="UAB_H1" value="1" desc="Comparator output from Half1 of this UAB"/>
					<value name="DSI0" value="10" desc=""/>
					<value name="DSI1" value="11" desc=""/>
				</field>
				<field name="DC0_TYPE" from="7" to="6" access="RW" desc="decimator type (filter order)">

<!-- DC0_TYPE bitfield enumerated values -->
					<value name="SINC1" value="0" desc="first order"/>
					<value name="SINC2" value="1" desc="second order"/>
					<value name="SINC3" value="10" desc="third order, this uses half of decimator1, therefore cannot be combined with dc1_mode SINC2"/>
					<value name="reserved" value="11" desc="reserved value, do not use"/>
				</field>
				<field name="DC0_SHIFT" from="12" to="8" access="RW" desc="shift the result right by specified amount, legal range 0..16">
				</field>
				<field name="DC0_RATIO" from="24" to="16" access="RW" desc="decimation ratio = DC0_RATIO+1, range 1..512">
				</field>
			</register>
			<register name="DC0_TRIG" address="0x40340408" bitWidth="32" desc="decimator0 trigger control">

<!-- ***********************UAB0_DC0_TRIG_REG fields *********************** -->
<!-- decimator0 trigger control -->
<!-- *********************************************************************** -->
				<field name="DC0_TRIG_SEL" from="28" to="24" access="RW" desc="Trigger select&#xA;0=UAB0 half 0 trigger output&#xA;1=UAB0 half 1 trigger output&#xA;2=UAB1 half 0 trigger output&#xA;3=UAB1 half 1 trigger output&#xA;4=UAB2 half 0 trigger output&#xA;5=UAB2 half 1 trigger output&#xA;6=UAB3 half 0 trigger output&#xA;7=UAB3 half 1 trigger output&#xA;8-30 = generic trigger inputs 0-22&#xA;31=SAR trigger output&#xA;For PASS4B  only values 0-1 and 8-11 and 31 are legal.">
				</field>
				<field name="DC0_DSI_TRIG_EN" from="29" to="29" access="RW" desc="Decimator DSI trigger input Enable&#xA;0: Ignore decimator DSI trigger input&#xA;1: Wait for positive edge on selected DSI trigger input">
				</field>
			</register>
			<register name="DC0_OVR" address="0x4034040c" bitWidth="32" desc="decimator 0 overflow control">

<!-- ************************UAB0_DC0_OVR_REG fields *********************** -->
<!-- decimator 0 overflow control -->
<!-- *********************************************************************** -->
				<field name="DC0_OVR_CORR_LOC" from="4" to="0" access="RW" desc="Bit location for overflow correction. This should be set to FILTER_ORDER*log2(DC0_RATIO)">
				</field>
			</register>
			<register name="DC0_A0" address="0x40340410" bitWidth="32" desc="decimator0 accumulator 0">

<!-- ************************UAB0_DC0_A0_REG fields ************************ -->
<!-- decimator0 accumulator 0 -->
<!-- *********************************************************************** -->
				<field name="A0" from="31" to="0" access="R" desc="24-bit sign extended accumulator0 status">
				</field>
			</register>
			<register name="DC0_A1" address="0x40340414" bitWidth="32" desc="decimator0 accumulator 1">

<!-- ************************UAB0_DC0_A1_REG fields ************************ -->
<!-- decimator0 accumulator 1 -->
<!-- *********************************************************************** -->
				<field name="A1" from="31" to="0" access="R" desc="24-bit sign extended accumulator1 status">
				</field>
			</register>
			<register name="DC0_DEC_CNT" address="0x40340418" bitWidth="32" desc="decimator0 decimation counter">

<!-- **********************UAB0_DC0_DEC_CNT_REG fields ********************* -->
<!-- decimator0 decimation counter -->
<!-- *********************************************************************** -->
				<field name="INT_CNT" from="8" to="0" access="R" desc="integration/decimation down counter">
				</field>
				<field name="DIFF_CNT" from="17" to="16" access="R" desc="differentiation down counter">
				</field>
			</register>
			<register name="DC0_TMP" address="0x4034041c" bitWidth="32" desc="decimator0 temporary value for differentiator">

<!-- ************************UAB0_DC0_TMP_REG fields *********************** -->
<!-- decimator0 temporary value for differentiator -->
<!-- *********************************************************************** -->
				<field name="TMP" from="31" to="0" access="R" desc="24-bit sign extended differentiator temporary value status">
				</field>
			</register>
			<register name="DC0_D0" address="0x40340420" bitWidth="32" desc="decimator0 differentiator 0">

<!-- ************************UAB0_DC0_D0_REG fields ************************ -->
<!-- decimator0 differentiator 0 -->
<!-- *********************************************************************** -->
				<field name="D0" from="31" to="0" access="R" desc="24-bit sign extended differentiator 0 status">
				</field>
			</register>
			<register name="DC0_D1" address="0x40340424" bitWidth="32" desc="decimator0 differentiator 1">

<!-- ************************UAB0_DC0_D1_REG fields ************************ -->
<!-- decimator0 differentiator 1 -->
<!-- *********************************************************************** -->
				<field name="D1" from="31" to="0" access="R" desc="24-bit sign extended differentiator 1 status">
				</field>
			</register>
			<register name="DC0_RES" address="0x40340428" bitWidth="32" desc="decimator0 result">

<!-- ************************UAB0_DC0_RES_REG fields *********************** -->
<!-- decimator0 result -->
<!-- *********************************************************************** -->
				<field name="RES" from="31" to="0" access="R" desc="24-bit sign extended result">
				</field>
			</register>
			<register name="DC1_CTRL" address="0x40340434" bitWidth="32" desc="decimator1 control">

<!-- ***********************UAB0_DC1_CTRL_REG fields *********************** -->
<!-- decimator1 control -->
<!-- *********************************************************************** -->
				<field name="DC1_START" from="0" to="0" access="RW" desc="Start decimator, in incremental mode, this bit is cleared by HW when done. If DSI trigger enable is set then only start after a DSI trigger.">
				</field>
				<field name="DC1_MODE" from="1" to="1" access="RW" desc="Operation mode&#xA;0: Incremental (one-shot) operation&#xA;1: Continuous operation">
				</field>
				<field name="DC1_SEL" from="5" to="4" access="RW" desc="Source select">

<!-- DC1_SEL bitfield enumerated values -->
					<value name="UAB_H0" value="0" desc="Comparator output from Half0 of this UAB"/>
					<value name="UAB_H1" value="1" desc="Comparator output from Half1 of this UAB"/>
					<value name="DSI0" value="10" desc=""/>
					<value name="DSI1" value="11" desc=""/>
				</field>
				<field name="DC1_TYPE" from="6" to="6" access="RW" desc="decimator type (filter order)">

<!-- DC1_TYPE bitfield enumerated values -->
					<value name="SINC1" value="0" desc="first order"/>
					<value name="SINC2" value="1" desc="second order"/>
				</field>
				<field name="DC01_CHAIN" from="7" to="7" access="RW" desc="Chain decimator0 and decimator1">
				</field>
				<field name="DC1_SHIFT" from="12" to="8" access="RW" desc="shift the result right by specified amount, legal range 0..16">
				</field>
				<field name="DC1_RATIO" from="24" to="16" access="RW" desc="decimation ratio = DC1_RATIO+1, range 1..512">
				</field>
			</register>
			<register name="DC1_TRIG" address="0x40340438" bitWidth="32" desc="decimator1 trigger control">

<!-- ***********************UAB0_DC1_TRIG_REG fields *********************** -->
<!-- decimator1 trigger control -->
<!-- *********************************************************************** -->
				<field name="DC1_TRIG_SEL" from="28" to="24" access="RW" desc="Trigger select&#xA;0=UAB0 half 0 trigger output&#xA;1=UAB0 half 1 trigger output&#xA;2=UAB1 half 0 trigger output&#xA;3=UAB1 half 1 trigger output&#xA;4=UAB2 half 0 trigger output&#xA;5=UAB2 half 1 trigger output&#xA;6=UAB3 half 0 trigger output&#xA;7=UAB3 half 1 trigger output&#xA;8-30 = generic trigger inputs 0-22&#xA;31=SAR trigger output&#xA;For PASS4B  only values 0-1 and 8-11 and 31 are legal.">
				</field>
				<field name="DC1_DSI_TRIG_EN" from="29" to="29" access="RW" desc="Decimator DSI trigger input Enable&#xA;0: Ignore decimator DSI trigger input&#xA;1: Wait for positive edge on selected DSI trigger input">
				</field>
			</register>
			<register name="DC1_OVR" address="0x4034043c" bitWidth="32" desc="decimator 1 overflow control">

<!-- ************************UAB0_DC1_OVR_REG fields *********************** -->
<!-- decimator 1 overflow control -->
<!-- *********************************************************************** -->
				<field name="DC1_OVR_CORR_LOC" from="4" to="0" access="RW" desc="Bit location for overflow correction. This should be set to FILTER_ORDER*log2(DC1_RATIO)">
				</field>
			</register>
			<register name="DC1_A0" address="0x40340440" bitWidth="32" desc="decimator1 accumulator 0">

<!-- ************************UAB0_DC1_A0_REG fields ************************ -->
<!-- decimator1 accumulator 0 -->
<!-- *********************************************************************** -->
				<field name="A0" from="31" to="0" access="R" desc="27-bit sign extended accumulator0 status">
				</field>
			</register>
			<register name="DC1_A1" address="0x40340444" bitWidth="32" desc="decimator1 accumulator 1">

<!-- ************************UAB0_DC1_A1_REG fields ************************ -->
<!-- decimator1 accumulator 1 -->
<!-- *********************************************************************** -->
				<field name="A1" from="31" to="0" access="R" desc="27-bit sign extended accumulator1 status">
				</field>
			</register>
			<register name="DC1_DEC_CNT" address="0x40340448" bitWidth="32" desc="decimator1 decimation counter">

<!-- **********************UAB0_DC1_DEC_CNT_REG fields ********************* -->
<!-- decimator1 decimation counter -->
<!-- *********************************************************************** -->
				<field name="INT_CNT" from="8" to="0" access="R" desc="integration/decimation down counter">
				</field>
				<field name="DIFF_CNT" from="17" to="16" access="R" desc="differentiation down counter">
				</field>
			</register>
			<register name="DC1_TMP" address="0x4034044c" bitWidth="32" desc="decimator1 temporary value for differentiator">

<!-- ************************UAB0_DC1_TMP_REG fields *********************** -->
<!-- decimator1 temporary value for differentiator -->
<!-- *********************************************************************** -->
				<field name="TMP" from="31" to="0" access="R" desc="27-bit sign extended differentiator temporary value status">
				</field>
			</register>
			<register name="DC1_D0" address="0x40340450" bitWidth="32" desc="decimator1 differentiator 0">

<!-- ************************UAB0_DC1_D0_REG fields ************************ -->
<!-- decimator1 differentiator 0 -->
<!-- *********************************************************************** -->
				<field name="D0" from="31" to="0" access="R" desc="27-bit sign extended differentiator 0 status">
				</field>
			</register>
			<register name="DC1_D1" address="0x40340454" bitWidth="32" desc="decimator1 differentiator 1">

<!-- ************************UAB0_DC1_D1_REG fields ************************ -->
<!-- decimator1 differentiator 1 -->
<!-- *********************************************************************** -->
				<field name="D1" from="31" to="0" access="R" desc="27-bit sign extended differentiator 1 status">
				</field>
			</register>
			<register name="DC1_RES" address="0x40340458" bitWidth="32" desc="decimator1 result">

<!-- ************************UAB0_DC1_RES_REG fields *********************** -->
<!-- decimator1 result -->
<!-- *********************************************************************** -->
				<field name="RES" from="31" to="0" access="R" desc="27-bit sign extended result">
				</field>
			</register>
			<register name="CAP_TRIM0" address="0x40340f00" bitWidth="32" desc="Trim for attenuation cap half0">

<!-- ***********************UAB0_CAP_TRIM0_REG fields ********************** -->
<!-- Trim for attenuation cap half0 -->
<!-- *********************************************************************** -->
				<field name="CBTC0_VAL" from="4" to="0" access="RW" desc="Cap B Trim 0 Value&#xA;Trim attenuation cap in branch B for DAC correctness">
				</field>
				<field name="CCTC0_VAL" from="10" to="8" access="RW" desc="Cap C Trim 0 Value&#xA;Do not measure value, instead use same value as for CBTC0_VAL">
				</field>
			</register>
			<register name="CAP_TRIM1" address="0x40340f04" bitWidth="32" desc="Trim for attenuation cap half1">

<!-- ***********************UAB0_CAP_TRIM1_REG fields ********************** -->
<!-- Trim for attenuation cap half1 -->
<!-- *********************************************************************** -->
				<field name="CBTC1_VAL" from="4" to="0" access="RW" desc="Cap B Trim 1 Value&#xA;Trim attenuation cap in branch B for DAC correctness">
				</field>
				<field name="CCTC1_VAL" from="10" to="8" access="RW" desc="Cap C Trim 1 Value&#xA;Do not measure value, instead use same value as for CBTC1_VAL">
				</field>
			</register>
			<register name="OA_TRIM0" address="0x40340f08" bitWidth="32" desc="Trim for opamp and buffers half0">

<!-- ***********************UAB0_OA_TRIM0_REG fields *********************** -->
<!-- Trim for opamp and buffers half0 -->
<!-- *********************************************************************** -->
				<field name="OA0_OFFSET" from="3" to="0" access="RW" desc="Opamp offset trim">
				</field>
				<field name="REF0_OFFSET" from="12" to="8" access="RW" desc="Reference buffer offset trim">
				</field>
				<field name="AGND0_OFFSET" from="20" to="16" access="RW" desc="Agnd buffer offset trim">
				</field>
			</register>
			<register name="OA_TRIM1" address="0x40340f0c" bitWidth="32" desc="Trim for opamp and buffers half1">

<!-- ***********************UAB0_OA_TRIM1_REG fields *********************** -->
<!-- Trim for opamp and buffers half1 -->
<!-- *********************************************************************** -->
				<field name="OA1_OFFSET" from="3" to="0" access="RW" desc="Opamp offset trim">
				</field>
				<field name="REF1_OFFSET" from="12" to="8" access="RW" desc="Reference buffer offset trim">
				</field>
				<field name="AGND1_OFFSET" from="20" to="16" access="RW" desc="Agnd buffer offset trim">
				</field>
			</register>
		</block>

	</block>

</deviceData>
