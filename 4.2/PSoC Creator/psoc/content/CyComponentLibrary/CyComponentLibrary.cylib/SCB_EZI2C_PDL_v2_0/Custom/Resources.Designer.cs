//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SCB_EZI2C_PDL_v2_0 {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SCB_EZI2C_PDL_v2_0.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Basic.
        /// </summary>
        internal static string BasicTabDisplayName {
            get {
                return ResourceManager.GetString("BasicTabDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Built-in.
        /// </summary>
        internal static string BuiltInTabDisplayName {
            get {
                return ResourceManager.GetString("BuiltInTabDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ERROR.
        /// </summary>
        internal static string ClockDisplayError {
            get {
                return ResourceManager.GetString("ClockDisplayError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The clock frequency is between {0} and {1} MHz. The slave cannot meet the I2C 
        ///specification timing parameters in this range..
        /// </summary>
        internal static string ClockInGapError {
            get {
                return ResourceManager.GetString("ClockInGapError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The clock frequency must be less than or equal to {0} MHz for the slave to operate..
        /// </summary>
        internal static string ClockOutOfRangeError {
            get {
                return ResourceManager.GetString("ClockOutOfRangeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This clock frequency also allows the slave to operate with a data rate up to 100 kbps..
        /// </summary>
        internal static string ClockSupportsBothDataRates {
            get {
                return ResourceManager.GetString("ClockSupportsBothDataRates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The clock frequency must be at least {0} MHz for the slave to operate..
        /// </summary>
        internal static string ClockTooLowError {
            get {
                return ResourceManager.GetString("ClockTooLowError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The actual data rate is less than the desired data rate. 
        ///Consult the TRM to get the clock frequency requirements for the slave..
        /// </summary>
        internal static string DataRateWarning {
            get {
                return ResourceManager.GetString("DataRateWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This function accepts a single argument, the desired data rate..
        /// </summary>
        internal static string ExprDataRateArgCheck {
            get {
                return ResourceManager.GetString("ExprDataRateArgCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This function accepts zero arguments..
        /// </summary>
        internal static string ExprNoArgCheck {
            get {
                return ResourceManager.GetString("ExprNoArgCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon InformationIconIco {
            get {
                object obj = ResourceManager.GetObject("InformationIconIco", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap InformationIconPng {
            get {
                object obj = ResourceManager.GetObject("InformationIconPng", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Motorola_00 {
            get {
                object obj = ResourceManager.GetObject("Motorola_00", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pins.
        /// </summary>
        internal static string PinsTabDisplayName {
            get {
                return ResourceManager.GetString("PinsTabDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UNKN.
        /// </summary>
        internal static string Unknown {
            get {
                return ResourceManager.GetString("Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon WarningIco {
            get {
                object obj = ResourceManager.GetObject("WarningIco", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
    }
}
