//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace I2S_v2_70.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("I2S_v2_70.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advanced.
        /// </summary>
        internal static string AdvancedTabName {
            get {
                return ResourceManager.GetString("AdvancedTabName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to General.
        /// </summary>
        internal static string BasicTabName {
            get {
                return ResourceManager.GetString("BasicTabName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Built-in.
        /// </summary>
        internal static string BuiltInTabName {
            get {
                return ResourceManager.GetString("BuiltInTabName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clock.
        /// </summary>
        internal static string ClockTabName {
            get {
                return ResourceManager.GetString("ClockTabName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected type:.
        /// </summary>
        internal static string DebugUnexpectedCase {
            get {
                return ResourceManager.GetString("DebugUnexpectedCase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Static; Dynamic.
        /// </summary>
        internal static string EnumBitResolution {
            get {
                return ResourceManager.GetString("EnumBitResolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Separate L/R; Interleaved.
        /// </summary>
        internal static string EnumInterleavingDesc {
            get {
                return ResourceManager.GetString("EnumInterleavingDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mono left; Mono right; Stereo; 4; 6; 8; 10.
        /// </summary>
        internal static string EnumNumChannelsDesc {
            get {
                return ResourceManager.GetString("EnumNumChannelsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rx data interleaving parameter must be set to Interleaved when Rx byte swap is enabled..
        /// </summary>
        internal static string ErrorInterleavingByteSwap {
            get {
                return ResourceManager.GetString("ErrorInterleavingByteSwap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data interleaving parameter must be set to Interleaved for mono audio data..
        /// </summary>
        internal static string ErrorInterleavingMonoAudio {
            get {
                return ResourceManager.GetString("ErrorInterleavingMonoAudio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter &apos;{0}&apos; doen&apos;t exist in the symbol..
        /// </summary>
        internal static string ErrorParamName {
            get {
                return ResourceManager.GetString("ErrorParamName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interconnect.
        /// </summary>
        internal static string InterconnectTabName {
            get {
                return ResourceManager.GetString("InterconnectTabName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Direction: {0}
        ///Data bits: {1}
        ///Word select period: {2}.
        /// </summary>
        internal static string SBBodyText {
            get {
                return ResourceManager.GetString("SBBodyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I2S Master.
        /// </summary>
        internal static string SBHeaderText {
            get {
                return ResourceManager.GetString("SBHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selects the connection for the clock terminal. The terminal must be connected to a clock source..
        /// </summary>
        internal static string TermDescriptionClock {
            get {
                return ResourceManager.GetString("TermDescriptionClock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selects the connection for the {0} terminal. The terminal can be connected to an interrupt (Internal) or left floating (Unused)..
        /// </summary>
        internal static string TermDescriptionInterrupt {
            get {
                return ResourceManager.GetString("TermDescriptionInterrupt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selects the connection for the sdo terminal. The terminal can be connected to a device pin (Internal) or left floating (Unused)..
        /// </summary>
        internal static string TermDescriptionMultiOption {
            get {
                return ResourceManager.GetString("TermDescriptionMultiOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selects the connection for the {0} terminal..
        /// </summary>
        internal static string TermDescriptionOneOption {
            get {
                return ResourceManager.GetString("TermDescriptionOneOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selects the connection for the sdi terminal. The terminal must be connected to a device pin..
        /// </summary>
        internal static string TermDescriptionSdi {
            get {
                return ResourceManager.GetString("TermDescriptionSdi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WordSelect should be at least two times greater than DataBits resolution..
        /// </summary>
        internal static string WordSelectEPMsg {
            get {
                return ResourceManager.GetString("WordSelectEPMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap WS {
            get {
                object obj = ResourceManager.GetObject("WS", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap WS_16 {
            get {
                object obj = ResourceManager.GetObject("WS_16", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
