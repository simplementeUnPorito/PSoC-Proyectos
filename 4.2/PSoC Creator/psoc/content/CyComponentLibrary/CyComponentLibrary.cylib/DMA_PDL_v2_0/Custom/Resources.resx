<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnEntireDescriptorTransferPerTrigger" xml:space="preserve">
    <value>An entire descriptor transfer per trigger</value>
  </data>
  <data name="BasicTabDisplayName" xml:space="preserve">
    <value>Channel</value>
  </data>
  <data name="BuiltInTabDisplayName" xml:space="preserve">
    <value>Built-in</value>
  </data>
  <data name="Byte" xml:space="preserve">
    <value>Byte</value>
  </data>
  <data name="ByteToByte" xml:space="preserve">
    <value>Byte to Byte</value>
  </data>
  <data name="ByteToWord" xml:space="preserve">
    <value>Byte to Word</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Copy" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGOfPtRkwAAACBjSFJNAAB6
        JQAAgIMAAPn/AACA6QAAdTAAAOpgAAA6mAAAF2+SX8VGAAAACXBIWXMAAAsTAAALEwEAmpwYAAAB/UlE
        QVQ4T6WR30tTYRjH3z/FlCHljTd25U1E+QMDhcKLhAItutqFXnUlKQpZzpjgdFuo8xfb7ExPRDpRmTrn
        L6bOlTVxKegGUzlHp3N6Zt/e9x3TWkuFHvich/O+7/fz8pxDAPwXRJz4BoYw7uWYh9zoEmfwxiAWpAok
        wwXJZRp04XlND24XVmTT15TBBMQ25qX9omJnP9HSOwK704vHlU1XSoh5eJF2wO4DhCXA45fRbPoMYUqG
        dUKCxSGhY1iCdmCP86QxkJsIM0iX6GJ5XienMcgHUQRCYS5Irrq+HeQ8czLOJcRodfDNducpNEMyXgnb
        qOr0o3d0l6//XpX6EMRZGVmlgwwuITo6L5v7KKJgR4pgI7CPr/5dGD8FeahBiHE8a/t4qgniVulH3HzY
        j8zibrZNCJv3OKqc36w2+vBC9wXvLBtckCj5UMHa1jGcKwfQCwtQPXjPluMCORzF6o8QFr8H4PJsYnx+
        HTXt8d9b3ReGWhdE2VsfSmqXOXphDqrC1gtBTkH5X1Rpl7lAoeOFJAUr/iOMuWXYJvfQ1u9CRp42LmCP
        VFTUzdKGP25O0GqdRvo9Ddv+t+DRSwciJ2cwDrhhsC1A/2GO38zCOvMUbtx9TY9dIshT2+nXtnAyi01Q
        FRmQkd+C9PtNNNyAtDv19NglguuScvH6gPwCW2kOoaPzmfwAAAAASUVORK5CYII=
</value>
  </data>
  <data name="DescriptorsTabDisplayName" xml:space="preserve">
    <value>Descriptors</value>
  </data>
  <data name="DeserializationErrorFmt" xml:space="preserve">
    <value>Error during serialization {0}: {1}</value>
  </data>
  <data name="DeserializationFailed" xml:space="preserve">
    <value>The DMA settings have incorrect values. You must redefine them for proper DMA operation.</value>
  </data>
  <data name="EntireDescriptorChainPerTrigger" xml:space="preserve">
    <value>Entire descriptor chain per trigger</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value />
  </data>
  <data name="ErrorDescriptorName" xml:space="preserve">
    <value>Descriptor name must be unique.</value>
  </data>
  <data name="ErrorDestinationTransferWidth" xml:space="preserve">
    <value>If "Data Element Size" is {0} then Source and "Destination Transfer Width" can be only {1}.</value>
  </data>
  <data name="ErrorIcon" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAYAAAA71pVKAAAABGdBTUEAALGPC/xhBQAAAuNJREFUOE9V
        kVtIVFEUhtc5czuZjjjhYKkhEV4yMQlRSfOSgiIaPVihCGovIeKDiYl0NUESswcTQ0pQwx560ETCBEvN
        MbKwVALFSzoWQkNWozOpM7P/lqNCLfg5cPb6/v2vtenfcmRk6B1JSSXO5OS3rqKi36KwcNOZkjK7HnG8
        efbYsfDJiAhpt/X/ssXEnHRGR0+J4mKBhgaguRmoqwPKyoCcHNiiomxdRuPNtsBAZRfZqbXQ0DBn1Ill
        5OdDVFQIlJa6AaSnA1lZENnZEKdPwxIS4iz38LhfqdfvGKweDlT/DgjoEwkJsOTm4mVNjbCGhWHdywu/
        PDxg9fVFT0EB5jIzYT16FO98fTcSVarCa4oi0TeDT+yPoCCnKzISY42NsFqtYrSpCfP792NBltHFhual
        JcwMD+NrUBDGDQZc0ek+pqnVfjSt19eY/fywFhCA78HBWOjvF3a7HRMdHRipqsLKygocq6tY4tgznGaU
        0zxSlA0D0Tka8/TsnPT2xiJrXlEwZTSKLwMDcDgc2Nragp3h6fh4jKtU+KDTYUCrRYdWK/YR3aYBRXn6
        hqFPrAmNBu9VKjFaXe2GXS4XlgcHMcLGJh5hiA16+NvCPbyxe/RCo6ntVasxxDKxa2dentiOummxYG1m
        BtsjDLe0oM/TE72ShCesO7Ls0hDV0jOVnNzJTt3s2JGXh2WzWWzyjGMc9ZW/P+Zev4bNZsMrfvdOnvcB
        wxclyc4PdYkeyrKmWZZNrZIkutLSxK/FRTEcFyeeE4nubfEOzCaT+FRXJxq55xb/8yf6fJAoxP3WFWr1
        qbuS9PMBH7QbDKKNCO27esxq9fHBPb7xBp8nEllloqowIrUbLtdopFRZvlBFZKnlhnoG7rMaWHdZ1ayK
        HXCNwZZDREY3uFfnJUmKJEpIJeorJlq/ys2VrBIi11miPwxMM3id4/4P/luxRHofojNajqYjqudsfDld
        PkAUfoSIl7xXRH8BE15+amMs1CMAAAAASUVORK5CYII=
</value>
  </data>
  <data name="ErrorProviderIcon" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAYAAAA71pVKAAAABGdBTUEAALGPC/xhBQAAAk9JREFUOE+l
        kl9Ik1EYxj9Fy1hQdNG/FXYRyPLPRbCaS2WMqdmqNVFLKv9mMRxpQrkhWKRpll3lSBlEjsCKGgarXaQX
        ldVFhBJCoV6k8yZiUUFs+/y+83TendwKu+uFj3Muvt953/d5HunPCo2PYrq3BW+dh/CqwYIXtWY8byrD
        m0vNmA0+wu/fVtbMrS5MNVux6OvHd48L8pVayG4bwm1WfGg5iKcVBkz0uVc+QOC0swzfHgyA3e0BG2oH
        u9YI1mEHcxaB1eVgoToX/pJdGOu+kHyARp1ycPD+TbDHg2Aj/WDj96Cqavxjdy6D1edCKddi1qrFbXM2
        3vlHxAO04+IwB6gjgb5eqO8nErD6OgBWk40l+1bEzBkImrTwna4WMIlDO8ZH9XaADfL7y9EkHByGejwL
        8uGNiJhWYdKoQZcxT8CkKonD+k6B3TgDdr0JzD+QgNmQC0rVDsj71yNSmIJ5QypaddsFTHbI7UeEOJ0V
        4uw+mYAVZwFk2yZELWvwwyhhTp+CxszNAiYfw+cOCFXPmvhZCOYw8CkcUHvq47vKpWsRKZDw2SBhbHc6
        6nZmCpgC8JH7SKKQJawmB+rVhkRn2WVDtCgV4XwJIb0Ejy4D50uLBUzJCZTr4z4q9m1QbFuw1FmZgGMX
        j+ErHze0R8KTvDRUbtDA7/UKmIqS89CShTnuI9kRNaUj1laCn63F+LJXwgLvGODgiXVpcFcdTYLLRcmh
        AJCPk/s0+MRVneHiPOM7enSr4x3/CS4XJYcCQD6SHaQqiUM7/jXq/5ck/QIfJMbXYGJ4QAAAAABJRU5E
        rkJggg==
</value>
  </data>
  <data name="Halfword" xml:space="preserve">
    <value>Halfword (2 bytes)</value>
  </data>
  <data name="HalfwordToHalfword" xml:space="preserve">
    <value>Halfword to Halfword</value>
  </data>
  <data name="HalfwordToWord" xml:space="preserve">
    <value>Halfword to Word</value>
  </data>
  <data name="LabelTextChannelPriority" xml:space="preserve">
    <value>Channel priority:</value>
  </data>
  <data name="LabelTextNumberOfDescriptors" xml:space="preserve">
    <value>Number of descriptors:</value>
  </data>
  <data name="LabelTextPreemptable" xml:space="preserve">
    <value>Preemptable:</value>
  </data>
  <data name="LabelTextTriggerInput" xml:space="preserve">
    <value>Trigger input:</value>
  </data>
  <data name="OneTransferPerTrigger" xml:space="preserve">
    <value>One transfer per trigger</value>
  </data>
  <data name="OneXLoopTransferPerTrigger" xml:space="preserve">
    <value>One X loop transfer per trigger</value>
  </data>
  <data name="Paste" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGOfPtRkwAAACBjSFJNAAB6
        JQAAgIMAAPn/AACA6QAAdTAAAOpgAAA6mAAAF2+SX8VGAAAACXBIWXMAAAsTAAALEwEAmpwYAAACX0lE
        QVQ4T6WSa0hTYRjHD/TBvhRdqE99Koi+RFFB9SGjUAsvLYzEjMxFTKVkk6XpSC1N0eVtadqMvAw1b5Uo
        KUUiJI7uGs7oIpEauZa1s3nP4tc5RwZNBgW98OPA+77/3/O8D0cA/gufmz3tOXTdzqS1KhVtTMh2X3c8
        CC21RXoJPFQVHMdpr2PSfoORwXySNUEUZeu5ZjRgyk6SCVwsYEZsZs7VxIyzHku5nqnxGpJjVbbXvSlc
        OBtKinoH9p6TjHesRxt9SMotEsjhOVcDZTkn6LPmI34qYWzQwAfrKdoqVMRG+VOXto4XRQLxx0K8BU01
        BQsC8RbGtGgy9JEYEiI4Hx+OXqNCpw4lLiqAYu0GRRAZ7O8tqK80Mis2MuswMzWai+NVAraa1QoD1avo
        K1/GU5OfEpYJ2L3VW2Ax5zDtqGJ6OIupN2eYfHkEsX05hdUd5JpbuXi1kRSjBV1mBbGpJqIT87wFlaWZ
        TIyYmBzUMPEsFPejbXy5u0YJe9bc/E+crhmGx5xExF0iLMYgby8IKgrTEd9m4X4ShLt7M67OtYxUC0pl
        eVXe6VEwN3QxMGRXwg96bRwIV8vHglCal8q3/nO4ujYh3luJo9mPoZuC0vaP+V98d0uVPzsZeG/H2v+R
        4CgdQVJ4/8HD+O/Zi1B8OQnH4zgpvIKvLUsZrV2CrUxAK71ZbtvTwXWpgxJLJ23dNuUrs2vLRoQrGYnK
        D+KZsgeNNLA/Kz+0vlPCzff7aOh47iUILEw/Lf1hKtThgYTt26kcyNOW3+yp5gtFIA/CF0elacsX/obP
        8L+D8Bsb4cocWY3wtQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="RangeErrorFmt" xml:space="preserve">
    <value>Value of {0} parameter should be between {1} and {2}</value>
  </data>
  <data name="RetriggerAfter16SysclkCycles" xml:space="preserve">
    <value>Retrigger after 16 Clk_Slow cycles</value>
  </data>
  <data name="RetriggerAfter4Sysclkcycles" xml:space="preserve">
    <value>Retrigger after 4 Clk_Slow cycles</value>
  </data>
  <data name="RetriggerImmediately" xml:space="preserve">
    <value>Retrigger immediately (pulse trigger)</value>
  </data>
  <data name="TriggerOnCompletionOfEntireDescriptorChain" xml:space="preserve">
    <value>Trigger on completion of entire descriptor chain</value>
  </data>
  <data name="TriggerOnDescriptorCompletion" xml:space="preserve">
    <value>Trigger on descriptor completion</value>
  </data>
  <data name="TriggerOnEveryElementTransferCompletion" xml:space="preserve">
    <value>Trigger on every element transfer completion</value>
  </data>
  <data name="TriggerOnEveryXLoopTransferCompletion" xml:space="preserve">
    <value>Trigger on every X loop transfer completion</value>
  </data>
  <data name="WaitForTriggerReactivation" xml:space="preserve">
    <value>Wait for trigger reactivation</value>
  </data>
  <data name="Word" xml:space="preserve">
    <value>Word (4 bytes)</value>
  </data>
  <data name="WordToByte" xml:space="preserve">
    <value>Word to Byte</value>
  </data>
  <data name="WordToHalfword" xml:space="preserve">
    <value>Word to Halfword</value>
  </data>
  <data name="WordToWord" xml:space="preserve">
    <value>Word to Word</value>
  </data>
</root>