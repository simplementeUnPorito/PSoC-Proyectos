<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BuiltInTabDisplayName" xml:space="preserve">
    <value>Built-in</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Error" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAV3SURBVFhH3VZ5UJVVHHVc/20mTZtmXBAViRFR0Of4FAUkQFF8Lk8QI8U0ElPQkEJMxcyN0pJV
        RDEWcUE0BIRABEWEEFGUx2Jio4aisUNNf5zu+eTZ++CxuPxTd+bM9/3uPb9zzr3f95Zevf4ro8xIaV6o
        dDxyebZLaaZ6ZWu6y2powZrzXCfvje7pjskMdY6Dc2nWKm/c2Lob974NxZND0Xga/iOetl1ZVwWG4MaW
        Xbj4sTfIZ99rBfl1xKTBV2wXFWR5bER5YDDqjiei6VQSmk6fl9B4/Oy/OPmTtNYYf1bile8NAvvYT52X
        DqIxUlpnOH347LrYUW3cGTTSIDEVzRey0JJ5BS2XrqI159pzZOdJdUvGZTSnXkTTmRQp2B9RJ1D4RQCo
        Q70eh9CMUVqnL3ZvrQg6jHqxG+6qOSldGOSgJSu3ewhe09kLaIxJQJ0IUbYvBGlCj7rdhrg73GJwuqPr
        M83eH9AQeRwNQkDa+fmMlwYfU8OReAllB8JBXep3GSLbWlVwbcMW1IZEoT44Co2xz4//lSFOoT48GnUR
        sfjFNwDU7zTAbePp6rTla1GzPwK1gaFSY8NRsYM2lAQGgdCda3+vj1MfEYO6AxGoORiJtBVrQR+9ITJt
        FpaWbN6J2t1BqN0bLJ2AFjd3BKIiK0cC73XXesLhhmrFu1Cy+RvQp0OA0tFTzZNdV+OJMH/qv/t5CDa1
        4fer+dCO8oxLKPb7WrbOmvPaQb5uf+2eIDz7ah9qxJU+9JOFyJ1kezDHcxMe++3CY58A1GwLlKH1+q0X
        4rwpS8tAoZefxOGVte4gv73G4007JH360E8WINnSUVPs7Y+H6zbjgcAjn+0d0JxfJDPRJKchc4UneNUd
        5Onrf7BO6K/3R7H3FtBPFiDWVtWqEaZVK9bj/qqNuL/GVy8acwtkZtWVd2U11zvrvf+JD6rcvVAmPg30
        kwU4MssJpSJd2Tw3VC5bg8qPPusU9dlXZabagvNd9VW6rUX5QndoNgWAfrIAYdZzccvTFyUfqHFnwXKU
        LlrZKTJmL0F1RaX8JETN+a76SoV5iYMLbotHTT9ZgKCZs1Hk8TkKp89FkQhR7OCsFylW83AzPkHvCXCe
        65313rBfgkLLeSj61Af0kwUIVtr9mbfKCwVWKuRPc0S+5dwOOKewRVHMCfnb/qhaVnOdPH39+WJz1M9b
        vQH0kwWImjizIkV8PvNsFiBngjVyzG1kODlOicJjcfJjP5cqcarFVXeQR357DepSnz70kwVIMp4adlS1
        DLn2aqSPUeDnsVNkuBN3Smby8HSSbJ217iC/vQZ1qU8f+skCFBlYKPbMcEC22h0poyxwfqipDL/FJ77Q
        5337ddbdcZINzSV9+tCvw9dxqKmyMlrlivSp9kgYbNQB92JPg9C3pp3rikNd6tNH749R3kgL1wBLO6Qu
        dEOCSBv/zug3BupRl/r06fQnOdRYcfOAgwopjs6IfXcsogeNem1Qh3rUpX6Xf0jKhk4css1kUn24ainO
        WTshaogRjg4yfGWwnzrUoy71u/1bVjDM3M53nOKv4PnOSJyjxrGRZjg0cORLg33spw71qNutuZZQMGyi
        3ZdGExp22szByflLEaeYhfD3xiJkoEG3II989rGfOtTrsbmWyOMKHGVW4mUxDfvF8zvh5IIYpR0iTaYg
        zMAU37894gVYc57r5JHPPvb36Ni7SndpmJnbdkPTKg+zyfCzssd3DgvEM3VBmDhaLQ6LZ8x5fys7rBk/
        GeSzr0e77t2791ttGNKnT5/hRN++fU369es3nhgwYMAMInKoiefW4e+nehgYVy82NP7bydAYWoi6lfNc
        J4/8/v37K7QaQs9Iqy28Bmo9exTwf0/6BxZ7PzqDOXw0AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="FreqKHzFormat" xml:space="preserve">
    <value>0.### kHz</value>
  </data>
  <data name="GeneralTabDisplayName" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="ILOClkFrequencyDisplayFmt" xml:space="preserve">
    <value>ILO clock nominal frequency: {0}</value>
  </data>
  <data name="ILOFrequencyPSoC3_5ErrorMsg" xml:space="preserve">
    <value>The ILO frequency must be either 1 kHz or 100 kHz.</value>
  </data>
  <data name="ILOFrequencyPSoC4ErrorMsg" xml:space="preserve">
    <value>The ILO frequency must be only 32 kHz.</value>
  </data>
  <data name="RatioDisplayFmt" xml:space="preserve">
    <value>Ratio: {0}</value>
  </data>
  <data name="RefClkDRCErrorMsg" xml:space="preserve">
    <value>Reference clock frequency is unknown.</value>
  </data>
  <data name="RefClkFrequencyDisplayFmt" xml:space="preserve">
    <value>Reference clock nominal frequency: {0}</value>
  </data>
  <data name="RefClockMinErrorMessage" xml:space="preserve">
    <value>The minimum reference clock for {0} ILO is {1}</value>
  </data>
  <data name="RefClockRangeErrorMessage" xml:space="preserve">
    <value>Valid range of reference clock for {0} ILO is from {1} to {2}</value>
  </data>
  <data name="UnknownStr" xml:space="preserve">
    <value>UNKNOWN</value>
  </data>
</root>