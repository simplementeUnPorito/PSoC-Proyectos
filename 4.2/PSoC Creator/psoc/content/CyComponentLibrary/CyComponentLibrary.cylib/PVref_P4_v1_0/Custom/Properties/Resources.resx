<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TAB_NAME_BASIC" xml:space="preserve">
    <value>Basic</value>
  </data>
  <data name="TAB_NAME_BUILTIN" xml:space="preserve">
    <value>Built-in</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imgPVref" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>