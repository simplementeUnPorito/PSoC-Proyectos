//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Scan_ADC_v1_30.View {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class cytooltips {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal cytooltips() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Scan_ADC_v1_30.View.cytooltips", typeof(cytooltips).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The scheduled acquisition time for this channel, in ns..
        /// </summary>
        public static string actAcqTimeToolTip {
            get {
                return ResourceManager.GetString("actAcqTimeToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the value of the &apos;alternate&apos; conversion resolution that any channel can utilize..
        /// </summary>
        public static string altResolutionToolTip {
            get {
                return ResourceManager.GetString("altResolutionToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the type of averaging that any channel can utilize if required..
        /// </summary>
        public static string averageModeToolTip {
            get {
                return ResourceManager.GetString("averageModeToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select whether this channel uses averaging..
        /// </summary>
        public static string channelAveragingToolTip {
            get {
                return ResourceManager.GetString("channelAveragingToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select either differential or single-ended input mode..
        /// </summary>
        public static string channelInputModeToolTip {
            get {
                return ResourceManager.GetString("channelInputModeToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Channel number. Corresponds to the label on the component symbol..
        /// </summary>
        public static string channelNumberToolTip {
            get {
                return ResourceManager.GetString("channelNumberToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select whether this channel uses the &apos;alternate&apos; resolution..
        /// </summary>
        public static string channelResolutionToolTip {
            get {
                return ResourceManager.GetString("channelResolutionToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select whether this channel causes a limit compare interrupt..
        /// </summary>
        public static string channelUseLimitIntToolTip {
            get {
                return ResourceManager.GetString("channelUseLimitIntToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select whether this channel causes a saturation interrupt..
        /// </summary>
        public static string channelUseSaturationIntToolTip {
            get {
                return ResourceManager.GetString("channelUseSaturationIntToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select whether to use an external clock (adds a terminal to the symbol)..
        /// </summary>
        public static string clockToolTip {
            get {
                return ResourceManager.GetString("clockToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Common.
        /// </summary>
        public static string commonTabName {
            get {
                return ResourceManager.GetString("commonTabName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select how the limit interrupt is triggered, on any channel that utilizes it..
        /// </summary>
        public static string compareModeToolTip {
            get {
                return ResourceManager.GetString("compareModeToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conversion.
        /// </summary>
        public static string conversionTabName {
            get {
                return ResourceManager.GetString("conversionTabName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select whether differential measurements are presented as signed or unsigned values..
        /// </summary>
        public static string diffResultFormatToolTip {
            get {
                return ResourceManager.GetString("diffResultFormatToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select whether this channel is enabled..
        /// </summary>
        public static string enableChannelToolTip {
            get {
                return ResourceManager.GetString("enableChannelToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the filter&apos;s {0}cutoff frequency..
        /// </summary>
        public static string filter3dbToolTip {
            get {
                return ResourceManager.GetString("filter3dbToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lower -3 dB point (kHz):.
        /// </summary>
        public static string filterBandPassF1Label {
            get {
                return ResourceManager.GetString("filterBandPassF1Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upper -3 dB point (kHz):.
        /// </summary>
        public static string filterBandPassF2Label {
            get {
                return ResourceManager.GetString("filterBandPassF2Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notch (kHz):.
        /// </summary>
        public static string filterBandStopF1Label {
            get {
                return ResourceManager.GetString("filterBandStopF1Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -3 dB (kHz):.
        /// </summary>
        public static string filterBandStopF2Label {
            get {
                return ResourceManager.GetString("filterBandStopF2Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -3 dB (kHz):.
        /// </summary>
        public static string filterHighPassF1Label {
            get {
                return ResourceManager.GetString("filterHighPassF1Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notch (kHz):.
        /// </summary>
        public static string filterHighPassF2Label {
            get {
                return ResourceManager.GetString("filterHighPassF2Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -3 dB (kHz):.
        /// </summary>
        public static string filterLowPassF1Label {
            get {
                return ResourceManager.GetString("filterLowPassF1Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notch (kHz):.
        /// </summary>
        public static string filterLowPassF2Label {
            get {
                return ResourceManager.GetString("filterLowPassF2Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the frequency of the filter&apos;s notch..
        /// </summary>
        public static string filterNotchToolTip {
            get {
                return ResourceManager.GetString("filterNotchToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The filter&apos;s sampling rate..
        /// </summary>
        public static string filterSampleFreqToolTip {
            get {
                return ResourceManager.GetString("filterSampleFreqToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the filter type.
        /// </summary>
        public static string filterTypeToolTip {
            get {
                return ResourceManager.GetString("filterTypeToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the ADC to run continuously once enabled..
        /// </summary>
        public static string freeRunningToolTip {
            get {
                return ResourceManager.GetString("freeRunningToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the upper limit value for comparisons to trigger the Limit interrupt..
        /// </summary>
        public static string highLimitToolTip {
            get {
                return ResourceManager.GetString("highLimitToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the lower limit value for comparisons to trigger the Limit interrupt..
        /// </summary>
        public static string lowLimitToolTip {
            get {
                return ResourceManager.GetString("lowLimitToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is the maximum source resistance at which the channel will convert correctly..
        /// </summary>
        public static string maxInputResistanceToolTip {
            get {
                return ResourceManager.GetString("maxInputResistanceToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the minimum required acquisition time for this channel, in ns..
        /// </summary>
        public static string minAcqTimeToolTip {
            get {
                return ResourceManager.GetString("minAcqTimeToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the number of scan configurations supported. (From {0} to {1}).
        /// </summary>
        public static string numberOfConfigsToolTip {
            get {
                return ResourceManager.GetString("numberOfConfigsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the ADC to wait until triggered to start a conversion..
        /// </summary>
        public static string oneShotToolTip {
            get {
                return ResourceManager.GetString("oneShotToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use clock frequency to derive sample rate..
        /// </summary>
        public static string sampleClockFreqToolTip {
            get {
                return ResourceManager.GetString("sampleClockFreqToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target ADC scan rate in complete scans per second.
        ///The achieved scan rate may vary from the target rate.
        ///See datasheet for details of scan rate calculation..
        /// </summary>
        public static string sampleRateToolTip {
            get {
                return ResourceManager.GetString("sampleRateToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select number of samples to combine when averaging is used..
        /// </summary>
        public static string samplesAvgdToolTip {
            get {
                return ResourceManager.GetString("samplesAvgdToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the number of channels for this configuration..
        /// </summary>
        public static string sequencedChannelsToolTip {
            get {
                return ResourceManager.GetString("sequencedChannelsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select whether single-ended measurements are presented as signed or unsigned values..
        /// </summary>
        public static string seResultFormatToolTip {
            get {
                return ResourceManager.GetString("seResultFormatToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable the start-of-conversion (soc) terminal..
        /// </summary>
        public static string startConversionToolTip {
            get {
                return ResourceManager.GetString("startConversionToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the start-of-conversion terminal to begin a scan for this configuration.  The soc terminal is enabled when this box is checked for any configuration..
        /// </summary>
        public static string useSocToolTip {
            get {
                return ResourceManager.GetString("useSocToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the signal to be used as Vneg (ADC inverting input connection) for single-ended conversions in this configuration..
        /// </summary>
        public static string vnegSourceToolTip {
            get {
                return ResourceManager.GetString("vnegSourceToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select when using an off-chip bypass capacitor on the device Vref pin (applies to all configurations).
        /// </summary>
        public static string vrefBypassToolTip {
            get {
                return ResourceManager.GetString("vrefBypassToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the source of the voltage to be used as Vref for conversions in this configuration..
        /// </summary>
        public static string vrefSourceToolTip {
            get {
                return ResourceManager.GetString("vrefSourceToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the value of a user-supplied voltage applied to Vref for this configuration..
        /// </summary>
        public static string vrefValueToolTip {
            get {
                return ResourceManager.GetString("vrefValueToolTip", resourceCulture);
            }
        }
    }
}
