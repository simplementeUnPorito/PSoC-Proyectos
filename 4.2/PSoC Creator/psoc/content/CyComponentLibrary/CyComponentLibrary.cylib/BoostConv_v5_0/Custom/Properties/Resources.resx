<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="boost" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\boost.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="boost_diodeless" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\boost_diodeless.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="TabConfig" xml:space="preserve">
    <value>Boost convertor configuration</value>
  </data>
  <data name="TabNameBuildIn" xml:space="preserve">
    <value>Built-in</value>
  </data>
  <data name="DRCMessage_RevisionError" xml:space="preserve">
    <value>Current siliconrevision doesn't support external clock  source feature! Change target silicon revision or select "None" option for external clock source field in customizer.</value>
  </data>
  <data name="VoltageWarningMessage" xml:space="preserve">
    <value>Output voltage is equal to input voltage when Input voltage is greater than programmed output voltage.</value>
  </data>
  <data name="DRCMessage_PSoC5Error" xml:space="preserve">
    <value>PSoC 5 does not have support for the Boost Converter functionality, so this component (`$INSTANCE_NAME`) cannot be used with this silicon</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Symbol_Error" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAAK/INwWK6QAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAJ3SURBVDhPbZNLSBtRGIVFEZ8oBIOioqAiirrwgSC6
        UEEXim8UF25diKAbpeKiUAkuBItYqzYKrcYYJxNmEh9tFKUPaqnSoi1uutHuCn3Q7vqgcHr+68Sa0gtf
        +HPuPefeufNPBIAwdF23k5vkBfltIbVo9n/Xh/3hglHN7cbSwABmqqpwt7ISi2SpthbayAh8Hg9kzXXP
        dfP8yuQkpvPycI8mb1sb/J2dCr29HQ+qq3G/pATbs7MScicsgMLUisOB29nZWG1qwkpLizKGhtTr1Lyt
        rXAVF2NvYUFCHJyKEHOG5nJhOjcXruZmZV4jga6uSzeH1AY1weTJvBUVMDVNQmwS4HD298PJY4vRQ3Sy
        3d1t2aHqIDXhITHr6hAcu6HuQwJOZsrL4ebEBpFdtslub69lh6oPqT0nT8kBHyXQ2CgBRxLwczY/HxpF
        k5OywwF53Ndn2aHqN9ROyXF9PR6lpkIvKJSAjxLwbaGoCAYDdniBgYICbCYmwpeebtmBLd7+WWYmTpOT
        cRQZiSfEV/g34GS5pgZmQwPWk5Jg8sXsCzYbtrKyFIesL6idk3fkODoafnrofaUuUR8exmJCAryc3CMv
        STAnx9ofqv5C7TP5QA65kX9wUALGJCDD3NiAkztpTH7GBW/JHl9raEj9g9p3ch4bC5OP6VtdlQDbVSMF
        5+bgTElBMCZGHfO13a6MwhnrX9Qu4uNhsNmMiQkxXzaS/Fgh87vLy/CyH/Z5iWfc6VNUFL6S93Fx6gL9
        paUwpqbEPB/yXQVYIaMGO2x3fBw7PT0w2B9GWRk2OzoQGBqCvrYm5v9/TCG4II3cIkdEDILUoqWFr0fE
        H/VXe+51WNNzAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="VoltageErrorMessage2MHz" xml:space="preserve">
    <value>Output voltage is limited to 2 x input voltage at boost frequency of 2 MHz.</value>
  </data>
  <data name="VoltageErrorMessage400kHz" xml:space="preserve">
    <value>Output voltage is limited to 4 x input voltage at boost frequency of 400 kHz.</value>
  </data>
  <data name="WarningHS" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAAK/INwWK6QAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAKISURBVDhPpZJdSJNRGMd31ZVQEViBdWUFmUG87ntz
        c+57+RHqhSwNokzIC7GgKIj8QESD6qYuKoQIGkTTWPNj6kAWOcnUSiPCmz4onaMV5lq95z3/nncXy4/d
        dfHnnPPw/P7Pc55zFAD+S1mDstxu9xWXy/XV6XT6HQ6HLVuOrKxBgluutzVATMxiad6PMo8TNpttS7bc
        TQGCcyrLPUgtTwC/54DkNMZ8V2G1Wjs25sraFKC2O6KBHgJfAn9myWQKYjyE2moXLBZL4cb8dQeCd9XW
        VBAwSuALMojS+gz4OYo3Q20oKSm5tTZf1roDDax7KtgFrIYJjKCxsTEtrA6ALz3EuVMeFBcXe9YymQ1N
        +sDJumNgMT/4rzB4auSfwcoj8PgDLITOw2g0Ps1qYLfbb8wMtIKv9AGpIM2gP2PAE73gsdvgC11ob7JB
        r9e3rDMgWDhTXwFp8Q4Z3KOK14DvnfLTwev1Uvs3wT93Q1pox/LwcZiNOmi12q0ZA0q8+zp4AfhG4I82
        IHEJWG6BIAhpSe+8kObqwaZrwKJV6L2oh0aj6U4bEGxqPl1JFToJvEwmzcAStf3pBFWsIfAopCkL2HMN
        WKQQYuQIkkENykqVUKlUWgV9EN9c4CwQo2vFG8AX68A/EvjenemARQ5DHN8HMbwH4lguWPgQhloPQqlU
        3lc4HaUQ3zZR1XrwL1XgH1zUshlsRgU2IYP7CcyDOLoT4sg2iMM5tM9D8nE+tGoBCvocg/O+auAVXWPG
        Dh41QBqnqqECsGA+WGAv2JPdYP1UuW8HmH87pL5cTPYUoKioaFBhNpvLTSbTIH0Q+Y1hMBjkZ4JOl560
        PCyo1Wr5vnLLaRGYhgVBKP8LhSSxclcWQckAAAAASUVORK5CYII=
</value>
  </data>
  <data name="InputVoltageErrorMessage" xml:space="preserve">
    <value>Output voltage is limited to 3.6V if input voltage range from 0.5V to 0.8V.</value>
  </data>
  <data name="DRCMessageFrequencyError" xml:space="preserve">
    <value>The switching frequency parameter has an incorrect value. Please open the customizer and fix the value.</value>
  </data>
  <data name="InputVoltageOutOfRange" xml:space="preserve">
    <value>Input voltage value must be between {0} and {1}.</value>
  </data>
  <data name="VoltageErrorPSoC5LP" xml:space="preserve">
    <value>Minimum value of input voltage can not be less than {0} for PSoC 5LP device.</value>
  </data>
  <data name="DRCSwitchingFreqPSoC5LPLimit" xml:space="preserve">
    <value>The switching frequency for PSoC 5 LP should be set to 400 kHz, because 32 kHz clock is incompatible with active boost mode.</value>
  </data>
  <data name="DRCSwitchingFreqPSoC3Limit" xml:space="preserve">
    <value>The switching frequency for PSoC 3 should be set to 400 kHz, because 32 kHz clock is intended to be used with standby boost mode.</value>
  </data>
  <data name="DRCClockSourcePSoC5LPLimit" xml:space="preserve">
    <value>External clock source option should be set to None for PSoC 5 LP.</value>
  </data>
</root>